{
    "name": "descope",
    "displayName": "Descope",
    "description": "A Pulumi package for creating and managing descope cloud resources.",
    "keywords": [
        "descope",
        "category/cloud"
    ],
    "homepage": "https://www.descope.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`descope` Terraform Provider](https://github.com/descope/terraform-provider-descope).",
    "repository": "https://github.com/descope/pulumi-descope",
    "logoUrl": "https://avatars3.githubusercontent.com/descope",
    "pluginDownloadURL": "github://api.github.com/descope",
    "publisher": "Descope",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Descope",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/descope/pulumi-descope/sdk/go/descope",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "java": {
            "basePackage": "com.descope",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@descope/pulumi-descope",
            "packageDescription": "A Pulumi package for creating and managing descope cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/descope/terraform-provider-descope)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-descope` repo](https://github.com/descope/pulumi-descope/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-descope` repo](https://github.com/descope/terraform-provider-descope/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "packageName": "descope_descope",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/descope/terraform-provider-descope)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-descope` repo](https://github.com/descope/pulumi-descope/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-descope` repo](https://github.com/descope/terraform-provider-descope/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string"
            },
            "managementKey": {
                "type": "string",
                "secret": true
            },
            "projectId": {
                "type": "string"
            }
        }
    },
    "types": {
        "descope:index/ProjectApplications:ProjectApplications": {
            "properties": {
                "oidcApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectApplicationsOidcApplication:ProjectApplicationsOidcApplication"
                    },
                    "description": "Applications using OpenID Connect (OIDC) for authentication.\n"
                },
                "samlApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectApplicationsSamlApplication:ProjectApplicationsSamlApplication"
                    },
                    "description": "Applications using SAML for authentication.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "oidcApplications",
                        "samlApplications"
                    ]
                }
            }
        },
        "descope:index/ProjectApplicationsOidcApplication:ProjectApplicationsOidcApplication": {
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of supported claims. e.g. `sub`, `email`, `exp`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the OIDC application.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the application should be enabled or disabled.\n"
                },
                "forceAuthentication": {
                    "type": "boolean",
                    "description": "This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP's request.\n"
                },
                "id": {
                    "type": "string",
                    "description": "An optional identifier for the OIDC application.\n"
                },
                "loginPageUrl": {
                    "type": "string",
                    "description": "The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).\n"
                },
                "logo": {
                    "type": "string",
                    "description": "A logo for the OIDC application. Should be a hosted image URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the OIDC application.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "claims",
                        "description",
                        "disabled",
                        "forceAuthentication",
                        "id",
                        "loginPageUrl",
                        "logo",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectApplicationsSamlApplication:ProjectApplicationsSamlApplication": {
            "properties": {
                "acsAllowedCallbackUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of allowed ACS callback URLS. This configuration is used when the default ACS URL value is unreachable. Supports wildcards.\n"
                },
                "attributeMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectApplicationsSamlApplicationAttributeMapping:ProjectApplicationsSamlApplicationAttributeMapping"
                    },
                    "description": "The `AttributeMapping` object. Read the description below.\n"
                },
                "defaultRelayState": {
                    "type": "string",
                    "description": "The default relay state. When using IdP-initiated authentication, this value may be used as a URL to a resource in the Service Provider.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the SAML application.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the application should be enabled or disabled.\n"
                },
                "dynamicConfiguration": {
                    "$ref": "#/types/descope:index/ProjectApplicationsSamlApplicationDynamicConfiguration:ProjectApplicationsSamlApplicationDynamicConfiguration",
                    "description": "The `DynamicConfiguration` object. Read the description below.\n"
                },
                "forceAuthentication": {
                    "type": "boolean",
                    "description": "This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP's request.\n"
                },
                "id": {
                    "type": "string",
                    "description": "An optional identifier for the SAML application.\n"
                },
                "loginPageUrl": {
                    "type": "string",
                    "description": "The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).\n"
                },
                "logo": {
                    "type": "string",
                    "description": "A logo for the SAML application. Should be a hosted image URL.\n"
                },
                "manualConfiguration": {
                    "$ref": "#/types/descope:index/ProjectApplicationsSamlApplicationManualConfiguration:ProjectApplicationsSamlApplicationManualConfiguration",
                    "description": "The `ManualConfiguration` object. Read the description below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the SAML application.\n"
                },
                "subjectNameIdFormat": {
                    "type": "string",
                    "description": "The subject name id format. Choose one of \"\", \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\", \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\", \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\", \"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\". Read more about this configuration [here](https://docs.descope.com/sso-integrations/applications/saml-apps).\n"
                },
                "subjectNameIdType": {
                    "type": "string",
                    "description": "The subject name id type. Choose one of \"\", \"email\", \"phone\". Read more about this configuration [here](https://docs.descope.com/sso-integrations/applications/saml-apps).\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "acsAllowedCallbackUrls",
                        "attributeMappings",
                        "defaultRelayState",
                        "description",
                        "disabled",
                        "dynamicConfiguration",
                        "forceAuthentication",
                        "id",
                        "loginPageUrl",
                        "logo",
                        "manualConfiguration",
                        "name",
                        "subjectNameIdFormat",
                        "subjectNameIdType"
                    ]
                }
            }
        },
        "descope:index/ProjectApplicationsSamlApplicationAttributeMapping:ProjectApplicationsSamlApplicationAttributeMapping": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the attribute.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the attribute.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "descope:index/ProjectApplicationsSamlApplicationDynamicConfiguration:ProjectApplicationsSamlApplicationDynamicConfiguration": {
            "properties": {
                "metadataUrl": {
                    "type": "string",
                    "description": "The metadata URL when retrieving the connection details dynamically.\n"
                }
            },
            "type": "object",
            "required": [
                "metadataUrl"
            ]
        },
        "descope:index/ProjectApplicationsSamlApplicationManualConfiguration:ProjectApplicationsSamlApplicationManualConfiguration": {
            "properties": {
                "acsUrl": {
                    "type": "string",
                    "description": "Enter the `ACS URL` from the SP.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "Enter the `Certificate` from the SP.\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Enter the `Entity Id` from the SP.\n"
                }
            },
            "type": "object",
            "required": [
                "acsUrl",
                "certificate",
                "entityId"
            ]
        },
        "descope:index/ProjectAttributes:ProjectAttributes": {
            "properties": {
                "tenants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAttributesTenant:ProjectAttributesTenant"
                    },
                    "description": "A list of `TenantAttribute`. Read the description below.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAttributesUser:ProjectAttributesUser"
                    },
                    "description": "A list of `UserAttribute`. Read the description below.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "tenants",
                        "users"
                    ]
                }
            }
        },
        "descope:index/ProjectAttributesTenant:ProjectAttributesTenant": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/descope:index/ProjectAttributesTenantAuthorization:ProjectAttributesTenantAuthorization"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute.\n"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When the attribute type is \"multiselect\". A list of options to chose from.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the attribute. Choose one of \"string\", \"number\", \"boolean\", \"singleselect\", \"multiselect\", \"date\".\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authorization",
                        "name",
                        "selectOptions",
                        "type"
                    ]
                }
            }
        },
        "descope:index/ProjectAttributesTenantAuthorization:ProjectAttributesTenantAuthorization": {
            "properties": {
                "viewPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "viewPermissions"
                    ]
                }
            }
        },
        "descope:index/ProjectAttributesUser:ProjectAttributesUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the attribute.\n"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When the attribute type is \"multiselect\". A list of options to chose from.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the attribute. Choose one of \"string\", \"number\", \"boolean\", \"singleselect\", \"multiselect\", \"date\".\n"
                },
                "widgetAuthorization": {
                    "$ref": "#/types/descope:index/ProjectAttributesUserWidgetAuthorization:ProjectAttributesUserWidgetAuthorization",
                    "description": "The `UserAttributeWidgetAuthorization` object. Read the description below.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "selectOptions",
                        "type",
                        "widgetAuthorization"
                    ]
                }
            }
        },
        "descope:index/ProjectAttributesUserWidgetAuthorization:ProjectAttributesUserWidgetAuthorization": {
            "properties": {
                "editPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of permissions by name to set editing permissions to the attribute in widgets. e.g \"SSO Admin\".\n"
                },
                "viewPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of permissions by name to set viewing permissions to the attribute in widgets. e.g \"SSO Admin\".\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "editPermissions",
                        "viewPermissions"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthentication:ProjectAuthentication": {
            "properties": {
                "embeddedLink": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationEmbeddedLink:ProjectAuthenticationEmbeddedLink",
                    "description": "Make the authentication experience smoother for the user by generating their initial token in a way that does not require the end user to initiate the process, requiring only verification.\n"
                },
                "enchantedLink": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationEnchantedLink:ProjectAuthenticationEnchantedLink",
                    "description": "An enhanced and more secure version of Magic Link, enabling users to start the authentication process on one device and execute the verification on another.\n"
                },
                "magicLink": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationMagicLink:ProjectAuthenticationMagicLink",
                    "description": "An authentication method where a user receives a unique link via email to log in.\n"
                },
                "oauth": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauth:ProjectAuthenticationOauth",
                    "description": "Authentication using Open Authorization, which allows users to authenticate with various external services.\n"
                },
                "otp": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOtp:ProjectAuthenticationOtp",
                    "description": "A dynamically generated set of numbers, granting the user one-time access.\n"
                },
                "passkeys": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationPasskeys:ProjectAuthenticationPasskeys",
                    "description": "Device-based passwordless authentication, using fingerprint, face scan, and more.\n"
                },
                "password": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationPassword:ProjectAuthenticationPassword",
                    "description": "The classic username and password combination used for authentication.\n"
                },
                "sso": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationSso:ProjectAuthenticationSso",
                    "description": "Single Sign-On (SSO) authentication method that enables users to access multiple applications with a single set of credentials.\n"
                },
                "totp": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationTotp:ProjectAuthenticationTotp",
                    "description": "A one-time code generated for the user using a shared secret and time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "embeddedLink",
                        "enchantedLink",
                        "magicLink",
                        "oauth",
                        "otp",
                        "passkeys",
                        "password",
                        "sso",
                        "totp"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationEmbeddedLink:ProjectAuthenticationEmbeddedLink": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "expirationTime": {
                    "type": "string",
                    "description": "The amount of time that the embedded link will be valid for.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "expirationTime"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationEnchantedLink:ProjectAuthenticationEnchantedLink": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "emailService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationEnchantedLinkEmailService:ProjectAuthenticationEnchantedLinkEmailService",
                    "description": "Settings related to sending emails as part of the enchanted link authentication.\n"
                },
                "expirationTime": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect users to after they log in using the enchanted link.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "emailService",
                        "expirationTime",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationEnchantedLinkEmailService:ProjectAuthenticationEnchantedLinkEmailService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationEnchantedLinkEmailServiceTemplate:ProjectAuthenticationEnchantedLinkEmailServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationEnchantedLinkEmailServiceTemplate:ProjectAuthenticationEnchantedLinkEmailServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "htmlBody": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plainTextBody": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "usePlainTextBody": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "htmlBody",
                        "id",
                        "name",
                        "plainTextBody",
                        "subject",
                        "usePlainTextBody"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationMagicLink:ProjectAuthenticationMagicLink": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "emailService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationMagicLinkEmailService:ProjectAuthenticationMagicLinkEmailService",
                    "description": "Settings related to sending emails as part of the magic link authentication.\n"
                },
                "expirationTime": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect users to after they log in using the magic link.\n"
                },
                "textService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationMagicLinkTextService:ProjectAuthenticationMagicLinkTextService",
                    "description": "Settings related to sending SMS messages as part of the magic link authentication.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "emailService",
                        "expirationTime",
                        "redirectUrl",
                        "textService"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationMagicLinkEmailService:ProjectAuthenticationMagicLinkEmailService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationMagicLinkEmailServiceTemplate:ProjectAuthenticationMagicLinkEmailServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationMagicLinkEmailServiceTemplate:ProjectAuthenticationMagicLinkEmailServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "htmlBody": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plainTextBody": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "usePlainTextBody": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "htmlBody",
                        "id",
                        "name",
                        "plainTextBody",
                        "subject",
                        "usePlainTextBody"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationMagicLinkTextService:ProjectAuthenticationMagicLinkTextService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationMagicLinkTextServiceTemplate:ProjectAuthenticationMagicLinkTextServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationMagicLinkTextServiceTemplate:ProjectAuthenticationMagicLinkTextServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "body",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauth:ProjectAuthenticationOauth": {
            "properties": {
                "custom": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationOauthCustom:ProjectAuthenticationOauthCustom"
                    },
                    "description": "Custom OAuth providers configured for this project.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "system": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystem:ProjectAuthenticationOauthSystem",
                    "description": "Custom configurations for builtin OAuth providers such as Apple, Google, GitHub, Facebook, etc.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "custom",
                        "disabled",
                        "system"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthCustom:ProjectAuthenticationOauthCustom": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthCustomProviderTokenManagement:ProjectAuthenticationOauthCustomProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthCustomProviderTokenManagement:ProjectAuthenticationOauthCustomProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystem:ProjectAuthenticationOauthSystem": {
            "properties": {
                "apple": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemApple:ProjectAuthenticationOauthSystemApple",
                    "description": "Apple's OAuth provider, allowing users to authenticate with their Apple Account.\n"
                },
                "discord": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemDiscord:ProjectAuthenticationOauthSystemDiscord",
                    "description": "Discord's OAuth provider, allowing users to authenticate with their Discord account.\n"
                },
                "facebook": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemFacebook:ProjectAuthenticationOauthSystemFacebook",
                    "description": "Facebook's OAuth provider, allowing users to authenticate with their Facebook account.\n"
                },
                "github": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGithub:ProjectAuthenticationOauthSystemGithub",
                    "description": "GitHub's OAuth provider, allowing users to authenticate with their GitHub account.\n"
                },
                "gitlab": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGitlab:ProjectAuthenticationOauthSystemGitlab",
                    "description": "GitLab's OAuth provider, allowing users to authenticate with their GitLab account.\n"
                },
                "google": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGoogle:ProjectAuthenticationOauthSystemGoogle",
                    "description": "Google's OAuth provider, allowing users to authenticate with their Google account.\n"
                },
                "linkedin": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemLinkedin:ProjectAuthenticationOauthSystemLinkedin",
                    "description": "LinkedIn's OAuth provider, allowing users to authenticate with their LinkedIn account.\n"
                },
                "microsoft": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemMicrosoft:ProjectAuthenticationOauthSystemMicrosoft",
                    "description": "Microsoft's OAuth provider, allowing users to authenticate with their Microsoft account.\n"
                },
                "slack": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemSlack:ProjectAuthenticationOauthSystemSlack",
                    "description": "Slack's OAuth provider, allowing users to authenticate with their Slack account.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apple",
                        "discord",
                        "facebook",
                        "github",
                        "gitlab",
                        "google",
                        "linkedin",
                        "microsoft",
                        "slack"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemApple:ProjectAuthenticationOauthSystemApple": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemAppleProviderTokenManagement:ProjectAuthenticationOauthSystemAppleProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemAppleProviderTokenManagement:ProjectAuthenticationOauthSystemAppleProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemDiscord:ProjectAuthenticationOauthSystemDiscord": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemDiscordProviderTokenManagement:ProjectAuthenticationOauthSystemDiscordProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemDiscordProviderTokenManagement:ProjectAuthenticationOauthSystemDiscordProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemFacebook:ProjectAuthenticationOauthSystemFacebook": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemFacebookProviderTokenManagement:ProjectAuthenticationOauthSystemFacebookProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemFacebookProviderTokenManagement:ProjectAuthenticationOauthSystemFacebookProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGithub:ProjectAuthenticationOauthSystemGithub": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGithubProviderTokenManagement:ProjectAuthenticationOauthSystemGithubProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGithubProviderTokenManagement:ProjectAuthenticationOauthSystemGithubProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGitlab:ProjectAuthenticationOauthSystemGitlab": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGitlabProviderTokenManagement:ProjectAuthenticationOauthSystemGitlabProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGitlabProviderTokenManagement:ProjectAuthenticationOauthSystemGitlabProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGoogle:ProjectAuthenticationOauthSystemGoogle": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemGoogleProviderTokenManagement:ProjectAuthenticationOauthSystemGoogleProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemGoogleProviderTokenManagement:ProjectAuthenticationOauthSystemGoogleProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemLinkedin:ProjectAuthenticationOauthSystemLinkedin": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemLinkedinProviderTokenManagement:ProjectAuthenticationOauthSystemLinkedinProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemLinkedinProviderTokenManagement:ProjectAuthenticationOauthSystemLinkedinProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemMicrosoft:ProjectAuthenticationOauthSystemMicrosoft": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement:ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement:ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemSlack:ProjectAuthenticationOauthSystemSlack": {
            "properties": {
                "allowedGrantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The type of grants (`authorization_code` or `implicit`) to allow when requesting access tokens from the OAuth provider.\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "The URL that users are redirected to for authorization with the OAuth provider.\n"
                },
                "claimMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID for the OAuth provider, used to identify the application to the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for the OAuth provider, used to authenticate the application with the provider.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the OAuth provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksEndpoint": {
                    "type": "string",
                    "description": "The URL where the application can retrieve JSON Web Key Sets (JWKS) for the OAuth provider.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the logo associated with the OAuth provider.\n"
                },
                "mergeUserAccounts": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through OAuth authentication.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom prompts or consent screens that users may see during OAuth authentication.\n"
                },
                "providerTokenManagement": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOauthSystemSlackProviderTokenManagement:ProjectAuthenticationOauthSystemSlackProviderTokenManagement",
                    "description": "Settings related to token management for the OAuth provider.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes of access that the application requests from the user's account on the OAuth provider.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "The URL where the application requests an access token from the OAuth provider.\n"
                },
                "userInfoEndpoint": {
                    "type": "string",
                    "description": "The URL where the application retrieves user information from the OAuth provider.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedGrantTypes",
                        "authorizationEndpoint",
                        "claimMapping",
                        "clientId",
                        "clientSecret",
                        "description",
                        "disabled",
                        "issuer",
                        "jwksEndpoint",
                        "logo",
                        "mergeUserAccounts",
                        "prompts",
                        "providerTokenManagement",
                        "scopes",
                        "tokenEndpoint",
                        "userInfoEndpoint"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOauthSystemSlackProviderTokenManagement:ProjectAuthenticationOauthSystemSlackProviderTokenManagement": {
            "properties": {
                "callbackDomain": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "callbackDomain",
                        "redirectUrl"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtp:ProjectAuthenticationOtp": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain to embed in OTP messages.\n"
                },
                "emailService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOtpEmailService:ProjectAuthenticationOtpEmailService",
                    "description": "Settings related to sending emails with OTP codes.\n"
                },
                "expirationTime": {
                    "type": "string",
                    "description": "The amount of time that an OTP code will be valid for.\n"
                },
                "textService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOtpTextService:ProjectAuthenticationOtpTextService",
                    "description": "Settings related to sending SMS messages with OTP codes.\n"
                },
                "voiceService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationOtpVoiceService:ProjectAuthenticationOtpVoiceService",
                    "description": "Settings related to voice calls with OTP codes.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "domain",
                        "emailService",
                        "expirationTime",
                        "textService",
                        "voiceService"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpEmailService:ProjectAuthenticationOtpEmailService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationOtpEmailServiceTemplate:ProjectAuthenticationOtpEmailServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpEmailServiceTemplate:ProjectAuthenticationOtpEmailServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "htmlBody": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plainTextBody": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "usePlainTextBody": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "htmlBody",
                        "id",
                        "name",
                        "plainTextBody",
                        "subject",
                        "usePlainTextBody"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpTextService:ProjectAuthenticationOtpTextService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationOtpTextServiceTemplate:ProjectAuthenticationOtpTextServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpTextServiceTemplate:ProjectAuthenticationOtpTextServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "body",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpVoiceService:ProjectAuthenticationOtpVoiceService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationOtpVoiceServiceTemplate:ProjectAuthenticationOtpVoiceServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationOtpVoiceServiceTemplate:ProjectAuthenticationOtpVoiceServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "body",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationPasskeys:ProjectAuthenticationPasskeys": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "topLevelDomain": {
                    "type": "string",
                    "description": "Passkeys will be usable in the following domain and all its subdomains.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "topLevelDomain"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationPassword:ProjectAuthenticationPassword": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "emailService": {
                    "$ref": "#/types/descope:index/ProjectAuthenticationPasswordEmailService:ProjectAuthenticationPasswordEmailService",
                    "description": "Settings related to sending password reset emails as part of the password feature.\n"
                },
                "expiration": {
                    "type": "boolean",
                    "description": "Whether users are required to change their password periodically.\n"
                },
                "expirationWeeks": {
                    "type": "integer",
                    "description": "The number of weeks after which a user's password expires and they need to replace it.\n"
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether the user account should be locked after a specified number of failed login attempts.\n"
                },
                "lockAttempts": {
                    "type": "integer",
                    "description": "The number of failed login attempts allowed before an account is locked.\n"
                },
                "lowercase": {
                    "type": "boolean",
                    "description": "Whether passwords must contain at least one lowercase letter.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of the password that users are required to use. The maximum length is always `64`.\n"
                },
                "nonAlphanumeric": {
                    "type": "boolean",
                    "description": "Whether passwords must contain at least one non-alphanumeric character (e.g. `!`, `@`, `#`).\n"
                },
                "number": {
                    "type": "boolean",
                    "description": "Whether passwords must contain at least one number.\n"
                },
                "reuse": {
                    "type": "boolean",
                    "description": "Whether to forbid password reuse when users change their password.\n"
                },
                "reuseAmount": {
                    "type": "integer"
                },
                "uppercase": {
                    "type": "boolean",
                    "description": "Whether passwords must contain at least one uppercase letter.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "emailService",
                        "expiration",
                        "expirationWeeks",
                        "lock",
                        "lockAttempts",
                        "lowercase",
                        "minLength",
                        "nonAlphanumeric",
                        "number",
                        "reuse",
                        "reuseAmount",
                        "uppercase"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationPasswordEmailService:ProjectAuthenticationPasswordEmailService": {
            "properties": {
                "connector": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthenticationPasswordEmailServiceTemplate:ProjectAuthenticationPasswordEmailServiceTemplate"
                    }
                }
            },
            "type": "object",
            "required": [
                "connector"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connector",
                        "templates"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationPasswordEmailServiceTemplate:ProjectAuthenticationPasswordEmailServiceTemplate": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "htmlBody": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plainTextBody": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "usePlainTextBody": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "htmlBody",
                        "id",
                        "name",
                        "plainTextBody",
                        "subject",
                        "usePlainTextBody"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationSso:ProjectAuthenticationSso": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                },
                "mergeUsers": {
                    "type": "boolean",
                    "description": "Whether to merge existing user accounts with new ones created through SSO authentication.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled",
                        "mergeUsers"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthenticationTotp:ProjectAuthenticationTotp": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Setting this to `true` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disabled"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthorization:ProjectAuthorization": {
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthorizationPermission:ProjectAuthorizationPermission"
                    },
                    "description": "A list of `Permission` objects.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectAuthorizationRole:ProjectAuthorizationRole"
                    },
                    "description": "A list of `Role` objects.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "permissions",
                        "roles"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthorizationPermission:ProjectAuthorizationPermission": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description for the permission.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the permission.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectAuthorizationRole:ProjectAuthorizationRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description for the role.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of permissions by name to be included in the role.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectors:ProjectConnectors": {
            "properties": {
                "abuseipdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAbuseipdb:ProjectConnectorsAbuseipdb"
                    },
                    "description": "AbuseIPDB provides an API to identify if an IP address has been associated with malicious activities online.\n"
                },
                "amplitudes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAmplitude:ProjectConnectorsAmplitude"
                    },
                    "description": "Amplitude, an analytics product that allows you to collects events from web and mobile apps, unify those and use those to better understand your customers needs.\n"
                },
                "auditWebhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAuditWebhook:ProjectConnectorsAuditWebhook"
                    }
                },
                "awsS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAwsS3:ProjectConnectorsAwsS3"
                    }
                },
                "awsTranslates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAwsTranslate:ProjectConnectorsAwsTranslate"
                    }
                },
                "clears": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsClear:ProjectConnectorsClear"
                    },
                    "description": "An identity verification platform that allow customers to digitally verify their identity from anywhere.\n"
                },
                "datadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsDatadog:ProjectConnectorsDatadog"
                    },
                    "description": "Datadog, an observability service for cloud-scale applications, providing monitoring of servers, databases, tools, and services, through a SaaS-based data analytics platform.\n"
                },
                "devrevGrows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsDevrevGrow:ProjectConnectorsDevrevGrow"
                    }
                },
                "docebos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsDocebo:ProjectConnectorsDocebo"
                    },
                    "description": "Docebo is a cloud-based Learning Management System (LMS) designed to increase performance and learning engagement.\n"
                },
                "fingerprintDescopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsFingerprintDescope:ProjectConnectorsFingerprintDescope"
                    }
                },
                "fingerprints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsFingerprint:ProjectConnectorsFingerprint"
                    },
                    "description": "Use the Fingerprint (formerly FingerprintJS) connector to add device intelligence and prevent fraud.\n"
                },
                "forters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsForter:ProjectConnectorsForter"
                    },
                    "description": "Use the Forter connector for account fraud prevention.\n"
                },
                "genericSmsGateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsGenericSmsGateway:ProjectConnectorsGenericSmsGateway"
                    }
                },
                "googleCloudTranslations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsGoogleCloudTranslation:ProjectConnectorsGoogleCloudTranslation"
                    }
                },
                "hibps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsHibp:ProjectConnectorsHibp"
                    },
                    "description": "API to check if password appeared previously exposed in data breaches.\n"
                },
                "https": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsHttp:ProjectConnectorsHttp"
                    },
                    "description": "A general purpose HTTP client\n"
                },
                "hubspots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsHubspot:ProjectConnectorsHubspot"
                    },
                    "description": "HubSpot is a CRM platform with software, integrations, and resources needed to connect marketing, sales, content management, and customer service.\n"
                },
                "incodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsIncode:ProjectConnectorsIncode"
                    },
                    "description": "Use the Incode connection to run identity verification processes like document checks or facial recognition.\n"
                },
                "intercoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsIntercom:ProjectConnectorsIntercom"
                    },
                    "description": "Intercom is a Conversational Relationship Platform (CRP).\n"
                },
                "lokalises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsLokalise:ProjectConnectorsLokalise"
                    },
                    "description": "Localize the language of your login and user journey screens with the Lokalise connector.\n"
                },
                "mparticles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsMparticle:ProjectConnectorsMparticle"
                    },
                    "description": "Track and send user event data (e.g. page views, purchases, etc.) across connected tools using the mParticle connector.\n"
                },
                "newrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsNewrelic:ProjectConnectorsNewrelic"
                    },
                    "description": "Use this connector to send audit events and troubleshooting logs to New Relic.\n"
                },
                "recaptchaEnterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsRecaptchaEnterprise:ProjectConnectorsRecaptchaEnterprise"
                    }
                },
                "recaptchas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsRecaptcha:ProjectConnectorsRecaptcha"
                    },
                    "description": "reCAPTCHA is a free google service that protects your site from spam and abuse. It uses advanced risk analysis techniques to tell humans and bots apart.\n"
                },
                "rekognitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsRekognition:ProjectConnectorsRekognition"
                    },
                    "description": "AWS Rekognition, cloud-based AI service that offers computer vision capabilities for analyzing and processing images. Useful for registration and verification processes, and can be used to detect fraud and prevent identity theft.\n"
                },
                "salesforceMarketingClouds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSalesforceMarketingCloud:ProjectConnectorsSalesforceMarketingCloud"
                    }
                },
                "salesforces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSalesforce:ProjectConnectorsSalesforce"
                    },
                    "description": "Salesforce is a leading cloud-based Customer Relationship Management (CRM) platform that helps businesses streamline their sales, service, and marketing operations.\n"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSegment:ProjectConnectorsSegment"
                    },
                    "description": "Segment, an analytics product that allows you to collects events from web and mobile apps, unify those and use those to better understand your customers needs.\n"
                },
                "sendgrids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSendgrid:ProjectConnectorsSendgrid"
                    }
                },
                "ses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSe:ProjectConnectorsSe"
                    }
                },
                "slacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSlack:ProjectConnectorsSlack"
                    },
                    "description": "Send updates to your team on Slack.\n"
                },
                "smartlings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSmartling:ProjectConnectorsSmartling"
                    },
                    "description": "Localize the language of your login and user journey screens with the Smartling connector.\n"
                },
                "smtps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSmtp:ProjectConnectorsSmtp"
                    }
                },
                "sns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSn:ProjectConnectorsSn"
                    }
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSumologic:ProjectConnectorsSumologic"
                    },
                    "description": "Sumo Logic, fast troubleshooting and investigation with AI/ML-powered log analytics\n"
                },
                "telesigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsTelesign:ProjectConnectorsTelesign"
                    },
                    "description": "Telesign Phone number intelligence API provides risk score for phone numbers.\n"
                },
                "traceables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsTraceable:ProjectConnectorsTraceable"
                    },
                    "description": "API security for a cloud-first, API-driven world.\n"
                },
                "twilioCores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsTwilioCore:ProjectConnectorsTwilioCore"
                    }
                },
                "twilioVerifies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsTwilioVerify:ProjectConnectorsTwilioVerify"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "abuseipdbs",
                        "amplitudes",
                        "auditWebhooks",
                        "awsS3s",
                        "awsTranslates",
                        "clears",
                        "datadogs",
                        "devrevGrows",
                        "docebos",
                        "fingerprintDescopes",
                        "fingerprints",
                        "forters",
                        "genericSmsGateways",
                        "googleCloudTranslations",
                        "hibps",
                        "https",
                        "hubspots",
                        "incodes",
                        "intercoms",
                        "lokalises",
                        "mparticles",
                        "newrelics",
                        "recaptchaEnterprises",
                        "recaptchas",
                        "rekognitions",
                        "salesforceMarketingClouds",
                        "salesforces",
                        "segments",
                        "sendgrids",
                        "ses",
                        "slacks",
                        "smartlings",
                        "smtps",
                        "sns",
                        "sumologics",
                        "telesigns",
                        "traceables",
                        "twilioCores",
                        "twilioVerifies"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAbuseipdb:ProjectConnectorsAbuseipdb": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The unique AbuseIPDB API key.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAmplitude:ProjectConnectorsAmplitude": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The Amplitude API Key generated for the Descope service.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "The server URL of the Amplitude API, when using different api or a custom domain in Amplitude.\n"
                },
                "serverZone": {
                    "type": "string",
                    "description": "`EU` or `US`. Sets the Amplitude server zone. Set this to `EU` for Amplitude projects created in `EU` data center. Default is `US`.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "description",
                        "id",
                        "name",
                        "serverUrl",
                        "serverZone"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAuditWebhook:ProjectConnectorsAuditWebhook": {
            "properties": {
                "auditFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAuditWebhookAuditFilter:ProjectConnectorsAuditWebhookAuditFilter"
                    },
                    "description": "Specify which events will be sent to the external audit service (including tenant selection).\n"
                },
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsAuditWebhookAuthentication:ProjectConnectorsAuditWebhookAuthentication",
                    "description": "Authentication Information\n"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL to fetch\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The headers to send with the request\n"
                },
                "hmacSecret": {
                    "type": "string",
                    "description": "HMAC is a method for message signing with a symmetrical key. This secret will be used to sign the payload, and the resulting signature will be sent in the `x-descope-webhook-s256` header. The receiving service should use this secret to verify the integrity and authenticity of the payload by checking the provided signature\n",
                    "secret": true
                },
                "id": {
                    "type": "string"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Will ignore certificate errors raised by the client\n"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditFilters",
                        "authentication",
                        "baseUrl",
                        "description",
                        "headers",
                        "hmacSecret",
                        "id",
                        "insecure",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAuditWebhookAuditFilter:ProjectConnectorsAuditWebhookAuditFilter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ]
        },
        "descope:index/ProjectConnectorsAuditWebhookAuthentication:ProjectConnectorsAuditWebhookAuthentication": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/descope:index/ProjectConnectorsAuditWebhookAuthenticationApiKey:ProjectConnectorsAuditWebhookAuthenticationApiKey"
                },
                "basic": {
                    "$ref": "#/types/descope:index/ProjectConnectorsAuditWebhookAuthenticationBasic:ProjectConnectorsAuditWebhookAuthenticationBasic"
                },
                "bearerToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "basic",
                        "bearerToken"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAuditWebhookAuthenticationApiKey:ProjectConnectorsAuditWebhookAuthenticationApiKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "token"
            ]
        },
        "descope:index/ProjectConnectorsAuditWebhookAuthenticationBasic:ProjectConnectorsAuditWebhookAuthenticationBasic": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "descope:index/ProjectConnectorsAwsS3:ProjectConnectorsAwsS3": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The unique AWS access key ID.\n",
                    "secret": true
                },
                "auditEnabled": {
                    "type": "boolean"
                },
                "auditFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsAwsS3AuditFilter:ProjectConnectorsAwsS3AuditFilter"
                    }
                },
                "bucket": {
                    "type": "string",
                    "description": "The AWS S3 bucket. This bucket should already exist for the connector to work.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS S3 region, e.g. `us-east-1`.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The secret AWS access key.\n",
                    "secret": true
                },
                "troubleshootLogEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "bucket",
                "name",
                "region",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "auditEnabled",
                        "auditFilters",
                        "bucket",
                        "description",
                        "id",
                        "name",
                        "region",
                        "secretAccessKey",
                        "troubleshootLogEnabled"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsAwsS3AuditFilter:ProjectConnectorsAwsS3AuditFilter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ]
        },
        "descope:index/ProjectConnectorsAwsTranslate:ProjectConnectorsAwsTranslate": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS access key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region to which this client will send requests. (e.g. us-east-1.)\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS secret access key.\n",
                    "secret": true
                },
                "sessionToken": {
                    "type": "string",
                    "description": "(Optional) A security or session token to use with these credentials. Usually present for temporary credentials.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "region",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "description",
                        "id",
                        "name",
                        "region",
                        "secretAccessKey",
                        "sessionToken"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsClear:ProjectConnectorsClear": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your CLEAR API key.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your CLEAR project ID.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "description",
                        "id",
                        "name",
                        "projectId"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsDatadog:ProjectConnectorsDatadog": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The unique Datadog organization key.\n",
                    "secret": true
                },
                "auditEnabled": {
                    "type": "boolean"
                },
                "auditFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsDatadogAuditFilter:ProjectConnectorsDatadogAuditFilter"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "site": {
                    "type": "string",
                    "description": "The Datadog site to send logs to. Default is `datadoghq.com`. European, free tier and other customers should set their site accordingly.\n"
                },
                "troubleshootLogEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "auditEnabled",
                        "auditFilters",
                        "description",
                        "id",
                        "name",
                        "site",
                        "troubleshootLogEnabled"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsDatadogAuditFilter:ProjectConnectorsDatadogAuditFilter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ]
        },
        "descope:index/ProjectConnectorsDevrevGrow:ProjectConnectorsDevrevGrow": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Authentication to DevRev APIs requires a personal access token (PAT).\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsDocebo:ProjectConnectorsDocebo": {
            "properties": {
                "baseUrl": {
                    "type": "string",
                    "description": "The Docebo api base url.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The Docebo OAuth 2.0 app client ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The Docebo OAuth 2.0 app client secret.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The Docebo user's password.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The Docebo username.\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "clientId",
                "clientSecret",
                "name",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "baseUrl",
                        "clientId",
                        "clientSecret",
                        "description",
                        "id",
                        "name",
                        "password",
                        "username"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsFingerprint:ProjectConnectorsFingerprint": {
            "properties": {
                "cloudflareEndpointUrl": {
                    "type": "string",
                    "description": "The Cloudflare integration Endpoint URL.\n"
                },
                "cloudflareScriptUrl": {
                    "type": "string",
                    "description": "The Cloudflare integration Script URL.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "publicApiKey": {
                    "type": "string",
                    "description": "The Fingerprint public API key.\n"
                },
                "secretApiKey": {
                    "type": "string",
                    "description": "The Fingerprint secret API key.\n",
                    "secret": true
                },
                "useCloudflareIntegration": {
                    "type": "boolean",
                    "description": "Enable to configure the relevant Cloudflare integration parameters if Cloudflare integration is set in your Fingerprint account.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicApiKey",
                "secretApiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudflareEndpointUrl",
                        "cloudflareScriptUrl",
                        "description",
                        "id",
                        "name",
                        "publicApiKey",
                        "secretApiKey",
                        "useCloudflareIntegration"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsFingerprintDescope:ProjectConnectorsFingerprintDescope": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "The custom domain to fetch\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "customDomain",
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsForter:ProjectConnectorsForter": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "overrideIpAddress": {
                    "type": "string",
                    "description": "Override the user IP address.\n"
                },
                "overrideUserEmail": {
                    "type": "string",
                    "description": "Override the user email.\n"
                },
                "overrides": {
                    "type": "boolean",
                    "description": "Override the user's IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The Forter secret key.\n",
                    "secret": true
                },
                "siteId": {
                    "type": "string",
                    "description": "The Forter site ID.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretKey",
                "siteId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "overrideIpAddress",
                        "overrideUserEmail",
                        "overrides",
                        "secretKey",
                        "siteId"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsGenericSmsGateway:ProjectConnectorsGenericSmsGateway": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsGenericSmsGatewayAuthentication:ProjectConnectorsGenericSmsGatewayAuthentication",
                    "description": "Authentication Information\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The headers to send with the request\n"
                },
                "hmacSecret": {
                    "type": "string",
                    "description": "HMAC is a method for message signing with a symmetrical key. This secret will be used to sign the base64 encoded payload, and the resulting signature will be sent in the `x-descope-webhook-s256` header. The receiving service should use this secret to verify the integrity and authenticity of the payload by checking the provided signature\n",
                    "secret": true
                },
                "id": {
                    "type": "string"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Will ignore certificate errors raised by the client\n"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "postUrl": {
                    "type": "string",
                    "description": "The URL of the post message request\n"
                },
                "sender": {
                    "type": "string",
                    "description": "The sender number\n"
                },
                "useStaticIps": {
                    "type": "boolean",
                    "description": "Whether the connector should send all requests from specific static IPs.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "postUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "description",
                        "headers",
                        "hmacSecret",
                        "id",
                        "insecure",
                        "name",
                        "postUrl",
                        "sender",
                        "useStaticIps"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsGenericSmsGatewayAuthentication:ProjectConnectorsGenericSmsGatewayAuthentication": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/descope:index/ProjectConnectorsGenericSmsGatewayAuthenticationApiKey:ProjectConnectorsGenericSmsGatewayAuthenticationApiKey"
                },
                "basic": {
                    "$ref": "#/types/descope:index/ProjectConnectorsGenericSmsGatewayAuthenticationBasic:ProjectConnectorsGenericSmsGatewayAuthenticationBasic"
                },
                "bearerToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "basic",
                        "bearerToken"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsGenericSmsGatewayAuthenticationApiKey:ProjectConnectorsGenericSmsGatewayAuthenticationApiKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "token"
            ]
        },
        "descope:index/ProjectConnectorsGenericSmsGatewayAuthenticationBasic:ProjectConnectorsGenericSmsGatewayAuthenticationBasic": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "descope:index/ProjectConnectorsGoogleCloudTranslation:ProjectConnectorsGoogleCloudTranslation": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The Google Cloud project ID where the Google Cloud Translation is managed.\n"
                },
                "serviceAccountJson": {
                    "type": "string",
                    "description": "Service Account JSON associated with the current project.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "projectId",
                "serviceAccountJson"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "projectId",
                        "serviceAccountJson"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsHibp:ProjectConnectorsHibp": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsHttp:ProjectConnectorsHttp": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsHttpAuthentication:ProjectConnectorsHttpAuthentication",
                    "description": "Authentication Information\n"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL to fetch\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The headers to send with the request\n"
                },
                "hmacSecret": {
                    "type": "string",
                    "description": "HMAC is a method for message signing with a symmetrical key. This secret will be used to sign the base64 encoded payload, and the resulting signature will be sent in the `x-descope-webhook-s256` header. The receiving service should use this secret to verify the integrity and authenticity of the payload by checking the provided signature\n",
                    "secret": true
                },
                "id": {
                    "type": "string"
                },
                "includeHeadersInContext": {
                    "type": "boolean",
                    "description": "The connector response context will also include the headers. The context will have a \"body\" attribute and a \"headers\" attribute. See more details in the help guide\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Will ignore certificate errors raised by the client\n"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "useStaticIps": {
                    "type": "boolean",
                    "description": "Whether the connector should send all requests from specific static IPs.\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "baseUrl",
                        "description",
                        "headers",
                        "hmacSecret",
                        "id",
                        "includeHeadersInContext",
                        "insecure",
                        "name",
                        "useStaticIps"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsHttpAuthentication:ProjectConnectorsHttpAuthentication": {
            "properties": {
                "apiKey": {
                    "$ref": "#/types/descope:index/ProjectConnectorsHttpAuthenticationApiKey:ProjectConnectorsHttpAuthenticationApiKey"
                },
                "basic": {
                    "$ref": "#/types/descope:index/ProjectConnectorsHttpAuthenticationBasic:ProjectConnectorsHttpAuthenticationBasic"
                },
                "bearerToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "basic",
                        "bearerToken"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsHttpAuthenticationApiKey:ProjectConnectorsHttpAuthenticationApiKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "token"
            ]
        },
        "descope:index/ProjectConnectorsHttpAuthenticationBasic:ProjectConnectorsHttpAuthenticationBasic": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "descope:index/ProjectConnectorsHubspot:ProjectConnectorsHubspot": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The HubSpot private API access token generated for the Descope service.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL of the HubSpot API, when using a custom domain in HubSpot, default value is https://api.hubapi.com .\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "useStaticIps": {
                    "type": "boolean",
                    "description": "Whether the connector should send all requests from specific static IPs.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessToken",
                        "baseUrl",
                        "description",
                        "id",
                        "name",
                        "useStaticIps"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsIncode:ProjectConnectorsIncode": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Your InCode API key.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The base URL of the Incode API\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "flowId": {
                    "type": "string",
                    "description": "Your wanted InCode's flow ID.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiUrl",
                "flowId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiUrl",
                        "description",
                        "flowId",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsIntercom:ProjectConnectorsIntercom": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Regional Hosting - US, EU, or AU. default: US\n"
                },
                "token": {
                    "type": "string",
                    "description": "The Intercom access token.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "region",
                        "token"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsLokalise:ProjectConnectorsLokalise": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Lokalise API token.\n",
                    "secret": true
                },
                "cardId": {
                    "type": "string",
                    "description": "(Optional) The ID of the payment card to use for translation orders. If not provided, the team credit will be used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Lokalise project ID.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Lokalise team ID. If not provided, the oldest available team will be used.\n"
                },
                "translationProvider": {
                    "type": "string",
                    "description": "The translation provider to use ('gengo', 'google', 'lokalise', 'deepl'), default is 'deepl'.\n"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "name",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiToken",
                        "cardId",
                        "description",
                        "id",
                        "name",
                        "projectId",
                        "teamId",
                        "translationProvider"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsMparticle:ProjectConnectorsMparticle": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The mParticle Server to Server Key generated for the Descope service.\n",
                    "secret": true
                },
                "apiSecret": {
                    "type": "string",
                    "description": "The mParticle Server to Server Secret generated for the Descope service.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL of the mParticle API, when using a custom domain in mParticle. default value is https://s2s.mparticle.com/\n"
                },
                "defaultEnvironment": {
                    "type": "string",
                    "description": "The default environment of which connector send data to, either “production” or “development“. default value: production. This field can be overridden per event (see at flows).\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "useStaticIps": {
                    "type": "boolean",
                    "description": "Whether the connector should send all requests from specific static IPs.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiSecret",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiSecret",
                        "baseUrl",
                        "defaultEnvironment",
                        "description",
                        "id",
                        "name",
                        "useStaticIps"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsNewrelic:ProjectConnectorsNewrelic": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Ingest License Key of the account you want to report data to.\n",
                    "secret": true
                },
                "auditEnabled": {
                    "type": "boolean"
                },
                "auditFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsNewrelicAuditFilter:ProjectConnectorsNewrelicAuditFilter"
                    }
                },
                "dataCenter": {
                    "type": "string",
                    "description": "The New Relic data center the account belongs to. Possible values are: `US`, `EU`, `FedRAMP`. Default is `US`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "logsPrefix": {
                    "type": "string",
                    "description": "Specify a custom prefix for all log fields. The default prefix is `descope.`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "overrideLogsPrefix": {
                    "type": "boolean",
                    "description": "Enable this option to use a custom prefix for log fields.\n"
                },
                "troubleshootLogEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "auditEnabled",
                        "auditFilters",
                        "dataCenter",
                        "description",
                        "id",
                        "logsPrefix",
                        "name",
                        "overrideLogsPrefix",
                        "troubleshootLogEnabled"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsNewrelicAuditFilter:ProjectConnectorsNewrelicAuditFilter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ]
        },
        "descope:index/ProjectConnectorsRecaptcha:ProjectConnectorsRecaptcha": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key authorizes communication between Descope backend and the reCAPTCHA server to verify the user's response.\n",
                    "secret": true
                },
                "siteKey": {
                    "type": "string",
                    "description": "The site key is used to invoke reCAPTCHA service on your site or mobile application.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretKey",
                "siteKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "secretKey",
                        "siteKey"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsRecaptchaEnterprise:ProjectConnectorsRecaptchaEnterprise": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key associated with the current project.\n",
                    "secret": true
                },
                "assessmentScore": {
                    "type": "number",
                    "description": "When configured, the Recaptcha action will return the score without assessing the request. The score ranges between 0 and 1, where 1 is a human interaction and 0 is a bot.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "enterprise": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "overrideAssessment": {
                    "type": "boolean",
                    "description": "Override the default assessment model. Note: Overriding assessment is intended for automated testing and should not be utilized in production environments.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The Google Cloud project ID where the reCAPTCHA Enterprise is managed.\n"
                },
                "siteKey": {
                    "type": "string",
                    "description": "The site key is used to invoke reCAPTCHA Enterprise service on your site or mobile application.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name",
                "projectId",
                "siteKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "assessmentScore",
                        "description",
                        "enterprise",
                        "id",
                        "name",
                        "overrideAssessment",
                        "projectId",
                        "siteKey"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsRekognition:ProjectConnectorsRekognition": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The AWS access key ID\n"
                },
                "collectionId": {
                    "type": "string",
                    "description": "The collection to store registered users in. Should match `[a-zA-Z0-9_.-]+` pattern. Changing this will cause losing existing users.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The AWS secret access key\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "collectionId",
                "name",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "collectionId",
                        "description",
                        "id",
                        "name",
                        "secretAccessKey"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSalesforce:ProjectConnectorsSalesforce": {
            "properties": {
                "baseUrl": {
                    "type": "string",
                    "description": "The Salesforce API base URL.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The consumer key of the connected app.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The consumer secret of the connected app.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "version": {
                    "type": "string",
                    "description": "REST API Version.\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "clientId",
                "clientSecret",
                "name",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "baseUrl",
                        "clientId",
                        "clientSecret",
                        "description",
                        "id",
                        "name",
                        "version"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSalesforceMarketingCloud:ProjectConnectorsSalesforceMarketingCloud": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account identifier, or MID, of the target business unit.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID issued when you create the API integration in Installed Packages.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret issued when you create the API integration in Installed Packages.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Space-separated list of data-access permissions for your connector.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The Salesforce Marketing Cloud endpoint subdomain.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "name",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountId",
                        "clientId",
                        "clientSecret",
                        "description",
                        "id",
                        "name",
                        "scope",
                        "subdomain"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSe:ProjectConnectorsSe": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS Access key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "An optional endpoint URL (hostname only or fully qualified URI).\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region to send requests to (e.g. `us-west-2`).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "AWS Secret Access Key.\n",
                    "secret": true
                },
                "sender": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSeSender:ProjectConnectorsSeSender",
                    "description": "The sender details that should be displayed in the email message.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "region",
                "secret",
                "sender"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "description",
                        "endpoint",
                        "id",
                        "name",
                        "region",
                        "secret",
                        "sender"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSeSender:ProjectConnectorsSeSender": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSegment:ProjectConnectorsSegment": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The base URL of the Segment API, when using a custom domain in Segment.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "writeKey": {
                    "type": "string",
                    "description": "The Segment Write Key generated for the Descope service.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "writeKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "host",
                        "id",
                        "name",
                        "writeKey"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSendgrid:ProjectConnectorsSendgrid": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSendgridAuthentication:ProjectConnectorsSendgridAuthentication"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "sender": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSendgridSender:ProjectConnectorsSendgridSender",
                    "description": "The sender details that should be displayed in the email message.\n"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "name",
                "sender"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "description",
                        "id",
                        "name",
                        "sender"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSendgridAuthentication:ProjectConnectorsSendgridAuthentication": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "descope:index/ProjectConnectorsSendgridSender:ProjectConnectorsSendgridSender": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSlack:ProjectConnectorsSlack": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The OAuth token for Slack's Bot User, used to authenticate API requests.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "token"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSmartling:ProjectConnectorsSmartling": {
            "properties": {
                "accountUid": {
                    "type": "string",
                    "description": "The account UID for the Smartling account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "userIdentifier": {
                    "type": "string",
                    "description": "The user identifier for the Smartling account.\n"
                },
                "userSecret": {
                    "type": "string",
                    "description": "The user secret for the Smartling account.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accountUid",
                "name",
                "userIdentifier",
                "userSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountUid",
                        "description",
                        "id",
                        "name",
                        "userIdentifier",
                        "userSecret"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSmtp:ProjectConnectorsSmtp": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSmtpAuthentication:ProjectConnectorsSmtpAuthentication"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "sender": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSmtpSender:ProjectConnectorsSmtpSender",
                    "description": "The sender details that should be displayed in the email message.\n"
                },
                "server": {
                    "$ref": "#/types/descope:index/ProjectConnectorsSmtpServer:ProjectConnectorsSmtpServer"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "name",
                "sender",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "description",
                        "id",
                        "name",
                        "sender",
                        "server"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSmtpAuthentication:ProjectConnectorsSmtpAuthentication": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "method",
                        "password",
                        "username"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSmtpSender:ProjectConnectorsSmtpSender": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSmtpServer:ProjectConnectorsSmtpServer": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSn:ProjectConnectorsSn": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS Access key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "An optional endpoint URL (hostname only or fully qualified URI).\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "The entity ID or principal entity (PE) ID for sending text messages to recipients in India.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "organizationNumber": {
                    "type": "string",
                    "description": "An optional phone number from which the text messages are going to be sent. Make sure it is registered properly in your server.\n"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region to send requests to (e.g. `us-west-2`).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "AWS Secret Access Key.\n",
                    "secret": true
                },
                "senderId": {
                    "type": "string",
                    "description": "The name of the sender from which the text message is going to be sent (see SNS documentation regarding acceptable IDs and supported regions/countries).\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The template for sending text messages to recipients in India. The template ID must be associated with the sender ID.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "region",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyId",
                        "description",
                        "endpoint",
                        "entityId",
                        "id",
                        "name",
                        "organizationNumber",
                        "region",
                        "secret",
                        "senderId",
                        "templateId"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSumologic:ProjectConnectorsSumologic": {
            "properties": {
                "auditEnabled": {
                    "type": "boolean"
                },
                "auditFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectConnectorsSumologicAuditFilter:ProjectConnectorsSumologicAuditFilter"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "httpSourceUrl": {
                    "type": "string",
                    "description": "The URL associated with an HTTP Hosted collector\n",
                    "secret": true
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "troubleshootLogEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "httpSourceUrl",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditEnabled",
                        "auditFilters",
                        "description",
                        "httpSourceUrl",
                        "id",
                        "name",
                        "troubleshootLogEnabled"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsSumologicAuditFilter:ProjectConnectorsSumologicAuditFilter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator",
                "values"
            ]
        },
        "descope:index/ProjectConnectorsTelesign:ProjectConnectorsTelesign": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The unique Telesign API key\n",
                    "secret": true
                },
                "customerId": {
                    "type": "string",
                    "description": "The unique Telesign account Customer ID\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "customerId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "customerId",
                        "description",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTraceable:ProjectConnectorsTraceable": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "euRegion": {
                    "type": "boolean",
                    "description": "EU(Europe) Region deployment of Traceable platform.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The Traceable secret key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "euRegion",
                        "id",
                        "name",
                        "secretKey"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioCore:ProjectConnectorsTwilioCore": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsTwilioCoreAuthentication:ProjectConnectorsTwilioCoreAuthentication"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "senders": {
                    "$ref": "#/types/descope:index/ProjectConnectorsTwilioCoreSenders:ProjectConnectorsTwilioCoreSenders"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authentication",
                "name",
                "senders"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountSid",
                        "authentication",
                        "description",
                        "id",
                        "name",
                        "senders"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioCoreAuthentication:ProjectConnectorsTwilioCoreAuthentication": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "secret": true
                },
                "apiSecret": {
                    "type": "string",
                    "secret": true
                },
                "authToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiSecret",
                        "authToken"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioCoreSenders:ProjectConnectorsTwilioCoreSenders": {
            "properties": {
                "sms": {
                    "$ref": "#/types/descope:index/ProjectConnectorsTwilioCoreSendersSms:ProjectConnectorsTwilioCoreSendersSms"
                },
                "voice": {
                    "$ref": "#/types/descope:index/ProjectConnectorsTwilioCoreSendersVoice:ProjectConnectorsTwilioCoreSendersVoice"
                }
            },
            "type": "object",
            "required": [
                "sms"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sms",
                        "voice"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioCoreSendersSms:ProjectConnectorsTwilioCoreSendersSms": {
            "properties": {
                "messagingServiceSid": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "messagingServiceSid",
                        "phoneNumber"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioCoreSendersVoice:ProjectConnectorsTwilioCoreSendersVoice": {
            "properties": {
                "phoneNumber": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "phoneNumber"
            ]
        },
        "descope:index/ProjectConnectorsTwilioVerify:ProjectConnectorsTwilioVerify": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectConnectorsTwilioVerifyAuthentication:ProjectConnectorsTwilioVerifyAuthentication"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what your connector is used for.\n"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A custom name for your connector.\n"
                },
                "sender": {
                    "type": "string"
                },
                "serviceSid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authentication",
                "name",
                "serviceSid"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accountSid",
                        "authentication",
                        "description",
                        "id",
                        "name",
                        "sender",
                        "serviceSid"
                    ]
                }
            }
        },
        "descope:index/ProjectConnectorsTwilioVerifyAuthentication:ProjectConnectorsTwilioVerifyAuthentication": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "secret": true
                },
                "apiSecret": {
                    "type": "string",
                    "secret": true
                },
                "authToken": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiKey",
                        "apiSecret",
                        "authToken"
                    ]
                }
            }
        },
        "descope:index/ProjectFlows:ProjectFlows": {
            "properties": {
                "data": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "data"
            ]
        },
        "descope:index/ProjectInviteSettings:ProjectInviteSettings": {
            "properties": {
                "addMagiclinkToken": {
                    "type": "boolean"
                },
                "inviteUrl": {
                    "type": "string"
                },
                "requireInvitation": {
                    "type": "boolean"
                },
                "sendEmail": {
                    "type": "boolean"
                },
                "sendText": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addMagiclinkToken",
                        "inviteUrl",
                        "requireInvitation",
                        "sendEmail",
                        "sendText"
                    ]
                }
            }
        },
        "descope:index/ProjectJwtTemplates:ProjectJwtTemplates": {
            "properties": {
                "accessKeyTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectJwtTemplatesAccessKeyTemplate:ProjectJwtTemplatesAccessKeyTemplate"
                    },
                    "description": "A list of `Access Key` type JWT Templates.\n"
                },
                "userTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/descope:index/ProjectJwtTemplatesUserTemplate:ProjectJwtTemplatesUserTemplate"
                    },
                    "description": "A list of `User` type JWT Templates.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyTemplates",
                        "userTemplates"
                    ]
                }
            }
        },
        "descope:index/ProjectJwtTemplatesAccessKeyTemplate:ProjectJwtTemplatesAccessKeyTemplate": {
            "properties": {
                "authSchema": {
                    "type": "string",
                    "description": "The authorization claims format - `default`, `tenantOnly` or `none`. Read more about schema types [here](https://docs.descope.com/project-settings/jwt-templates).\n"
                },
                "conformanceIssuer": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the JWT Template.\n"
                },
                "emptyClaimPolicy": {
                    "type": "string",
                    "description": "Policy for empty claims - `none`, `nil` or `delete`.\n"
                },
                "enforceIssuer": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the JWT Template.\n"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSchema",
                        "conformanceIssuer",
                        "description",
                        "emptyClaimPolicy",
                        "enforceIssuer",
                        "id",
                        "name",
                        "template"
                    ]
                }
            }
        },
        "descope:index/ProjectJwtTemplatesUserTemplate:ProjectJwtTemplatesUserTemplate": {
            "properties": {
                "authSchema": {
                    "type": "string",
                    "description": "The authorization claims format - `default`, `tenantOnly` or `none`. Read more about schema types [here](https://docs.descope.com/project-settings/jwt-templates).\n"
                },
                "conformanceIssuer": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the JWT Template.\n"
                },
                "emptyClaimPolicy": {
                    "type": "string",
                    "description": "Policy for empty claims - `none`, `nil` or `delete`.\n"
                },
                "enforceIssuer": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the JWT Template.\n"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSchema",
                        "conformanceIssuer",
                        "description",
                        "emptyClaimPolicy",
                        "enforceIssuer",
                        "id",
                        "name",
                        "template"
                    ]
                }
            }
        },
        "descope:index/ProjectProjectSettings:ProjectProjectSettings": {
            "properties": {
                "accessKeyJwtTemplate": {
                    "type": "string",
                    "description": "Name of the access key JWT Template.\n"
                },
                "accessKeySessionTokenExpiration": {
                    "type": "string",
                    "description": "The expiry time for access key session tokens. Use values such as \"10 minutes\", \"4 hours\", etc. The value needs to be at least 3 minutes and can't be longer than 4 weeks.\n"
                },
                "appUrl": {
                    "type": "string"
                },
                "approvedDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of approved domains that are allowed for redirect and verification URLs for different authentication methods.\n"
                },
                "cookieDomain": {
                    "type": "string",
                    "description": "The domain name for custom domain set up. To read more about custom domain and cookie policy click [here](https://docs.descope.com/how-to-deploy-to-production/custom-domain).\n"
                },
                "cookiePolicy": {
                    "type": "string",
                    "description": "Use \"strict\", \"lax\" or \"none\". To read more about custom domain and cookie policy click [here](https://docs.descope.com/how-to-deploy-to-production/custom-domain).\n"
                },
                "customDomain": {
                    "type": "string"
                },
                "enableInactivity": {
                    "type": "boolean",
                    "description": "Use `True` to enable session inactivity. To read more about session inactivity click [here](https://docs.descope.com/project-settings#session-inactivity).\n"
                },
                "inactivityTime": {
                    "type": "string",
                    "description": "The session inactivity time. Use values such as \"15 minutes\", \"1 hour\", etc. The minimum value is \"10 minutes\".\n"
                },
                "refreshTokenExpiration": {
                    "type": "string",
                    "description": "The expiry time for the refresh token, after which the user must log in again. Use values such as \"4 weeks\", \"14 days\", etc. The minimum value is \"3 minutes\".\n"
                },
                "refreshTokenRotation": {
                    "type": "boolean",
                    "description": "Every time the user refreshes their session token via their refresh token, the refresh token itself is also updated to a new one.\n"
                },
                "sessionTokenExpiration": {
                    "type": "string",
                    "description": "The expiry time of the session token, used for accessing the application's resources. The value needs to be at least 3 minutes and can't be longer than the refresh token expiration.\n"
                },
                "stepUpTokenExpiration": {
                    "type": "string",
                    "description": "The expiry time for the step up token, after which it will not be valid and the user will automatically go back to the session token.\n"
                },
                "testUsersLoginidRegexp": {
                    "type": "string",
                    "description": "Define a regular expression so that whenever a user is created with a matching login ID it will automatically be marked as a test user.\n"
                },
                "testUsersStaticOtp": {
                    "type": "string",
                    "description": "A 6 digit static OTP code for use with test users.\n"
                },
                "testUsersVerifierRegexp": {
                    "type": "string",
                    "description": "The pattern of the verifiers that will be used for testing.\n"
                },
                "tokenResponseMethod": {
                    "type": "string",
                    "description": "Configure how refresh tokens are managed by the Descope SDKs. Must be either `response_body` or `cookies`. The default value is `response_body`.\n"
                },
                "trustedDeviceTokenExpiration": {
                    "type": "string",
                    "description": "The expiry time for the trusted device token. The minimum value is \"3 minutes\".\n"
                },
                "userJwtTemplate": {
                    "type": "string",
                    "description": "Name of the user JWT Template.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKeyJwtTemplate",
                        "accessKeySessionTokenExpiration",
                        "appUrl",
                        "approvedDomains",
                        "cookieDomain",
                        "cookiePolicy",
                        "customDomain",
                        "enableInactivity",
                        "inactivityTime",
                        "refreshTokenExpiration",
                        "refreshTokenRotation",
                        "sessionTokenExpiration",
                        "stepUpTokenExpiration",
                        "testUsersLoginidRegexp",
                        "testUsersStaticOtp",
                        "testUsersVerifierRegexp",
                        "tokenResponseMethod",
                        "trustedDeviceTokenExpiration",
                        "userJwtTemplate"
                    ]
                }
            }
        },
        "descope:index/ProjectStyles:ProjectStyles": {
            "properties": {
                "data": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "data"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the descope package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string"
            },
            "managementKey": {
                "type": "string",
                "secret": true
            },
            "projectId": {
                "type": "string"
            }
        },
        "inputProperties": {
            "baseUrl": {
                "type": "string"
            },
            "managementKey": {
                "type": "string",
                "secret": true
            },
            "projectId": {
                "type": "string"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:descope/terraformConfig"
        }
    },
    "resources": {
        "descope:index/project:Project": {
            "properties": {
                "applications": {
                    "$ref": "#/types/descope:index/ProjectApplications:ProjectApplications",
                    "description": "Applications that are registered with the project.\n"
                },
                "attributes": {
                    "$ref": "#/types/descope:index/ProjectAttributes:ProjectAttributes",
                    "description": "Custom attributes that can be attached to users and tenants.\n"
                },
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectAuthentication:ProjectAuthentication",
                    "description": "Settings for each authentication method.\n"
                },
                "authorization": {
                    "$ref": "#/types/descope:index/ProjectAuthorization:ProjectAuthorization",
                    "description": "Define Role-Based Access Control (RBAC) for your users by creating roles and permissions.\n"
                },
                "connectors": {
                    "$ref": "#/types/descope:index/ProjectConnectors:ProjectConnectors",
                    "description": "Enrich your flows by interacting with third party services.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "This can be set to `production` to mark production projects, otherwise this should be left unset for development or staging projects.\n"
                },
                "flows": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/descope:index/ProjectFlows:ProjectFlows"
                    },
                    "description": "Custom authentication flows to use in this project.\n"
                },
                "inviteSettings": {
                    "$ref": "#/types/descope:index/ProjectInviteSettings:ProjectInviteSettings"
                },
                "jwtTemplates": {
                    "$ref": "#/types/descope:index/ProjectJwtTemplates:ProjectJwtTemplates",
                    "description": "Defines templates for JSON Web Tokens (JWT) used for authentication.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Descope project.\n"
                },
                "projectSettings": {
                    "$ref": "#/types/descope:index/ProjectProjectSettings:ProjectProjectSettings",
                    "description": "General settings for the Descope project.\n"
                },
                "styles": {
                    "$ref": "#/types/descope:index/ProjectStyles:ProjectStyles",
                    "description": "Custom styles that can be applied to the project's authentication flows.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Descriptive tags for your Descope project. Each tag must be no more than 50 characters long.\n"
                }
            },
            "required": [
                "applications",
                "attributes",
                "authentication",
                "authorization",
                "connectors",
                "environment",
                "flows",
                "inviteSettings",
                "jwtTemplates",
                "name",
                "projectSettings",
                "styles",
                "tags"
            ],
            "inputProperties": {
                "applications": {
                    "$ref": "#/types/descope:index/ProjectApplications:ProjectApplications",
                    "description": "Applications that are registered with the project.\n"
                },
                "attributes": {
                    "$ref": "#/types/descope:index/ProjectAttributes:ProjectAttributes",
                    "description": "Custom attributes that can be attached to users and tenants.\n"
                },
                "authentication": {
                    "$ref": "#/types/descope:index/ProjectAuthentication:ProjectAuthentication",
                    "description": "Settings for each authentication method.\n"
                },
                "authorization": {
                    "$ref": "#/types/descope:index/ProjectAuthorization:ProjectAuthorization",
                    "description": "Define Role-Based Access Control (RBAC) for your users by creating roles and permissions.\n"
                },
                "connectors": {
                    "$ref": "#/types/descope:index/ProjectConnectors:ProjectConnectors",
                    "description": "Enrich your flows by interacting with third party services.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "This can be set to `production` to mark production projects, otherwise this should be left unset for development or staging projects.\n"
                },
                "flows": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/descope:index/ProjectFlows:ProjectFlows"
                    },
                    "description": "Custom authentication flows to use in this project.\n"
                },
                "inviteSettings": {
                    "$ref": "#/types/descope:index/ProjectInviteSettings:ProjectInviteSettings"
                },
                "jwtTemplates": {
                    "$ref": "#/types/descope:index/ProjectJwtTemplates:ProjectJwtTemplates",
                    "description": "Defines templates for JSON Web Tokens (JWT) used for authentication.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Descope project.\n"
                },
                "projectSettings": {
                    "$ref": "#/types/descope:index/ProjectProjectSettings:ProjectProjectSettings",
                    "description": "General settings for the Descope project.\n"
                },
                "styles": {
                    "$ref": "#/types/descope:index/ProjectStyles:ProjectStyles",
                    "description": "Custom styles that can be applied to the project's authentication flows.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Descriptive tags for your Descope project. Each tag must be no more than 50 characters long.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "applications": {
                        "$ref": "#/types/descope:index/ProjectApplications:ProjectApplications",
                        "description": "Applications that are registered with the project.\n"
                    },
                    "attributes": {
                        "$ref": "#/types/descope:index/ProjectAttributes:ProjectAttributes",
                        "description": "Custom attributes that can be attached to users and tenants.\n"
                    },
                    "authentication": {
                        "$ref": "#/types/descope:index/ProjectAuthentication:ProjectAuthentication",
                        "description": "Settings for each authentication method.\n"
                    },
                    "authorization": {
                        "$ref": "#/types/descope:index/ProjectAuthorization:ProjectAuthorization",
                        "description": "Define Role-Based Access Control (RBAC) for your users by creating roles and permissions.\n"
                    },
                    "connectors": {
                        "$ref": "#/types/descope:index/ProjectConnectors:ProjectConnectors",
                        "description": "Enrich your flows by interacting with third party services.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "This can be set to `production` to mark production projects, otherwise this should be left unset for development or staging projects.\n"
                    },
                    "flows": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/descope:index/ProjectFlows:ProjectFlows"
                        },
                        "description": "Custom authentication flows to use in this project.\n"
                    },
                    "inviteSettings": {
                        "$ref": "#/types/descope:index/ProjectInviteSettings:ProjectInviteSettings"
                    },
                    "jwtTemplates": {
                        "$ref": "#/types/descope:index/ProjectJwtTemplates:ProjectJwtTemplates",
                        "description": "Defines templates for JSON Web Tokens (JWT) used for authentication.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Descope project.\n"
                    },
                    "projectSettings": {
                        "$ref": "#/types/descope:index/ProjectProjectSettings:ProjectProjectSettings",
                        "description": "General settings for the Descope project.\n"
                    },
                    "styles": {
                        "$ref": "#/types/descope:index/ProjectStyles:ProjectStyles",
                        "description": "Custom styles that can be applied to the project's authentication flows.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Descriptive tags for your Descope project. Each tag must be no more than 50 characters long.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pulumi:providers:descope/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/resources/pulumi:providers:descope"
                    }
                },
                "type": "pulumi:providers:descope/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}