// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope;

import com.descope.pulumi.descope.ProjectArgs;
import com.descope.pulumi.descope.Utilities;
import com.descope.pulumi.descope.inputs.ProjectState;
import com.descope.pulumi.descope.outputs.ProjectApplications;
import com.descope.pulumi.descope.outputs.ProjectAttributes;
import com.descope.pulumi.descope.outputs.ProjectAuthentication;
import com.descope.pulumi.descope.outputs.ProjectAuthorization;
import com.descope.pulumi.descope.outputs.ProjectConnectors;
import com.descope.pulumi.descope.outputs.ProjectFlows;
import com.descope.pulumi.descope.outputs.ProjectInviteSettings;
import com.descope.pulumi.descope.outputs.ProjectJwtTemplates;
import com.descope.pulumi.descope.outputs.ProjectProjectSettings;
import com.descope.pulumi.descope.outputs.ProjectStyles;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="descope:index/project:Project")
public class Project extends com.pulumi.resources.CustomResource {
    /**
     * Applications that are registered with the project.
     * 
     */
    @Export(name="applications", refs={ProjectApplications.class}, tree="[0]")
    private Output<ProjectApplications> applications;

    /**
     * @return Applications that are registered with the project.
     * 
     */
    public Output<ProjectApplications> applications() {
        return this.applications;
    }
    /**
     * Custom attributes that can be attached to users and tenants.
     * 
     */
    @Export(name="attributes", refs={ProjectAttributes.class}, tree="[0]")
    private Output<ProjectAttributes> attributes;

    /**
     * @return Custom attributes that can be attached to users and tenants.
     * 
     */
    public Output<ProjectAttributes> attributes() {
        return this.attributes;
    }
    /**
     * Settings for each authentication method.
     * 
     */
    @Export(name="authentication", refs={ProjectAuthentication.class}, tree="[0]")
    private Output<ProjectAuthentication> authentication;

    /**
     * @return Settings for each authentication method.
     * 
     */
    public Output<ProjectAuthentication> authentication() {
        return this.authentication;
    }
    /**
     * Define Role-Based Access Control (RBAC) for your users by creating roles and permissions.
     * 
     */
    @Export(name="authorization", refs={ProjectAuthorization.class}, tree="[0]")
    private Output<ProjectAuthorization> authorization;

    /**
     * @return Define Role-Based Access Control (RBAC) for your users by creating roles and permissions.
     * 
     */
    public Output<ProjectAuthorization> authorization() {
        return this.authorization;
    }
    /**
     * Enrich your flows by interacting with third party services.
     * 
     */
    @Export(name="connectors", refs={ProjectConnectors.class}, tree="[0]")
    private Output<ProjectConnectors> connectors;

    /**
     * @return Enrich your flows by interacting with third party services.
     * 
     */
    public Output<ProjectConnectors> connectors() {
        return this.connectors;
    }
    /**
     * This can be set to `production` to mark production projects, otherwise this should be left unset for development or staging projects.
     * 
     */
    @Export(name="environment", refs={String.class}, tree="[0]")
    private Output<String> environment;

    /**
     * @return This can be set to `production` to mark production projects, otherwise this should be left unset for development or staging projects.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * Custom authentication flows to use in this project.
     * 
     */
    @Export(name="flows", refs={Map.class,String.class,ProjectFlows.class}, tree="[0,1,2]")
    private Output<Map<String,ProjectFlows>> flows;

    /**
     * @return Custom authentication flows to use in this project.
     * 
     */
    public Output<Map<String,ProjectFlows>> flows() {
        return this.flows;
    }
    @Export(name="inviteSettings", refs={ProjectInviteSettings.class}, tree="[0]")
    private Output<ProjectInviteSettings> inviteSettings;

    public Output<ProjectInviteSettings> inviteSettings() {
        return this.inviteSettings;
    }
    /**
     * Defines templates for JSON Web Tokens (JWT) used for authentication.
     * 
     */
    @Export(name="jwtTemplates", refs={ProjectJwtTemplates.class}, tree="[0]")
    private Output<ProjectJwtTemplates> jwtTemplates;

    /**
     * @return Defines templates for JSON Web Tokens (JWT) used for authentication.
     * 
     */
    public Output<ProjectJwtTemplates> jwtTemplates() {
        return this.jwtTemplates;
    }
    /**
     * The name of the Descope project.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Descope project.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * General settings for the Descope project.
     * 
     */
    @Export(name="projectSettings", refs={ProjectProjectSettings.class}, tree="[0]")
    private Output<ProjectProjectSettings> projectSettings;

    /**
     * @return General settings for the Descope project.
     * 
     */
    public Output<ProjectProjectSettings> projectSettings() {
        return this.projectSettings;
    }
    /**
     * Custom styles that can be applied to the project&#39;s authentication flows.
     * 
     */
    @Export(name="styles", refs={ProjectStyles.class}, tree="[0]")
    private Output<ProjectStyles> styles;

    /**
     * @return Custom styles that can be applied to the project&#39;s authentication flows.
     * 
     */
    public Output<ProjectStyles> styles() {
        return this.styles;
    }
    /**
     * Descriptive tags for your Descope project. Each tag must be no more than 50 characters long.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tags;

    /**
     * @return Descriptive tags for your Descope project. Each tag must be no more than 50 characters long.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Project(java.lang.String name) {
        this(name, ProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Project(java.lang.String name, @Nullable ProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Project(java.lang.String name, @Nullable ProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("descope:index/project:Project", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Project(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("descope:index/project:Project", name, state, makeResourceOptions(options, id), false);
    }

    private static ProjectArgs makeArgs(@Nullable ProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProjectArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/descope")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Project get(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Project(name, id, state, options);
    }
}
