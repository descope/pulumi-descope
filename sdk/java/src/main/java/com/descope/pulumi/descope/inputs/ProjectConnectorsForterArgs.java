// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectConnectorsForterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectConnectorsForterArgs Empty = new ProjectConnectorsForterArgs();

    /**
     * The Forter API version.
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    /**
     * @return The Forter API version.
     * 
     */
    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * A description of what your connector is used for.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A custom name for your connector.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A custom name for your connector.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Override the user IP address.
     * 
     */
    @Import(name="overrideIpAddress")
    private @Nullable Output<String> overrideIpAddress;

    /**
     * @return Override the user IP address.
     * 
     */
    public Optional<Output<String>> overrideIpAddress() {
        return Optional.ofNullable(this.overrideIpAddress);
    }

    /**
     * Override the user email.
     * 
     */
    @Import(name="overrideUserEmail")
    private @Nullable Output<String> overrideUserEmail;

    /**
     * @return Override the user email.
     * 
     */
    public Optional<Output<String>> overrideUserEmail() {
        return Optional.ofNullable(this.overrideUserEmail);
    }

    /**
     * Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
     * 
     */
    @Import(name="overrides")
    private @Nullable Output<Boolean> overrides;

    /**
     * @return Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
     * 
     */
    public Optional<Output<Boolean>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    /**
     * The Forter secret key.
     * 
     */
    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    /**
     * @return The Forter secret key.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    /**
     * The Forter site ID.
     * 
     */
    @Import(name="siteId", required=true)
    private Output<String> siteId;

    /**
     * @return The Forter site ID.
     * 
     */
    public Output<String> siteId() {
        return this.siteId;
    }

    private ProjectConnectorsForterArgs() {}

    private ProjectConnectorsForterArgs(ProjectConnectorsForterArgs $) {
        this.apiVersion = $.apiVersion;
        this.description = $.description;
        this.id = $.id;
        this.name = $.name;
        this.overrideIpAddress = $.overrideIpAddress;
        this.overrideUserEmail = $.overrideUserEmail;
        this.overrides = $.overrides;
        this.secretKey = $.secretKey;
        this.siteId = $.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectConnectorsForterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectConnectorsForterArgs $;

        public Builder() {
            $ = new ProjectConnectorsForterArgs();
        }

        public Builder(ProjectConnectorsForterArgs defaults) {
            $ = new ProjectConnectorsForterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiVersion The Forter API version.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        /**
         * @param apiVersion The Forter API version.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param overrideIpAddress Override the user IP address.
         * 
         * @return builder
         * 
         */
        public Builder overrideIpAddress(@Nullable Output<String> overrideIpAddress) {
            $.overrideIpAddress = overrideIpAddress;
            return this;
        }

        /**
         * @param overrideIpAddress Override the user IP address.
         * 
         * @return builder
         * 
         */
        public Builder overrideIpAddress(String overrideIpAddress) {
            return overrideIpAddress(Output.of(overrideIpAddress));
        }

        /**
         * @param overrideUserEmail Override the user email.
         * 
         * @return builder
         * 
         */
        public Builder overrideUserEmail(@Nullable Output<String> overrideUserEmail) {
            $.overrideUserEmail = overrideUserEmail;
            return this;
        }

        /**
         * @param overrideUserEmail Override the user email.
         * 
         * @return builder
         * 
         */
        public Builder overrideUserEmail(String overrideUserEmail) {
            return overrideUserEmail(Output.of(overrideUserEmail));
        }

        /**
         * @param overrides Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
         * 
         * @return builder
         * 
         */
        public Builder overrides(@Nullable Output<Boolean> overrides) {
            $.overrides = overrides;
            return this;
        }

        /**
         * @param overrides Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
         * 
         * @return builder
         * 
         */
        public Builder overrides(Boolean overrides) {
            return overrides(Output.of(overrides));
        }

        /**
         * @param secretKey The Forter secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey The Forter secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param siteId The Forter site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Output<String> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The Forter site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(String siteId) {
            return siteId(Output.of(siteId));
        }

        public ProjectConnectorsForterArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsForterArgs", "name");
            }
            if ($.secretKey == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsForterArgs", "secretKey");
            }
            if ($.siteId == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsForterArgs", "siteId");
            }
            return $;
        }
    }

}
