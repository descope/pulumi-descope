// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectConnectorsRecaptchaEnterprise {
    /**
     * @return API key associated with the current project.
     * 
     */
    private String apiKey;
    /**
     * @return When configured, the Recaptcha action will return the score without assessing the request. The score ranges between 0 and 1, where 1 is a human interaction and 0 is a bot.
     * 
     */
    private @Nullable Double assessmentScore;
    /**
     * @return Apply a custom url to the reCAPTCHA Enterprise scripts. This is useful when attempting to use reCAPTCHA globally. Defaults to https://www.google.com
     * 
     */
    private @Nullable String baseUrl;
    /**
     * @return The bot threshold is used to determine whether the request is a bot or a human. The score ranges between 0 and 1, where 1 is a human interaction and 0 is a bot. If the score is below this threshold, the request is considered a bot.
     * 
     */
    private @Nullable Double botThreshold;
    /**
     * @return A description of what your connector is used for.
     * 
     */
    private @Nullable String description;
    private @Nullable String id;
    /**
     * @return A custom name for your connector.
     * 
     */
    private String name;
    /**
     * @return Override the default assessment model. Note: Overriding assessment is intended for automated testing and should not be utilized in production environments.
     * 
     */
    private @Nullable Boolean overrideAssessment;
    /**
     * @return The Google Cloud project ID where the reCAPTCHA Enterprise is managed.
     * 
     */
    private String projectId;
    /**
     * @return The site key is used to invoke reCAPTCHA Enterprise service on your site or mobile application.
     * 
     */
    private String siteKey;

    private ProjectConnectorsRecaptchaEnterprise() {}
    /**
     * @return API key associated with the current project.
     * 
     */
    public String apiKey() {
        return this.apiKey;
    }
    /**
     * @return When configured, the Recaptcha action will return the score without assessing the request. The score ranges between 0 and 1, where 1 is a human interaction and 0 is a bot.
     * 
     */
    public Optional<Double> assessmentScore() {
        return Optional.ofNullable(this.assessmentScore);
    }
    /**
     * @return Apply a custom url to the reCAPTCHA Enterprise scripts. This is useful when attempting to use reCAPTCHA globally. Defaults to https://www.google.com
     * 
     */
    public Optional<String> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }
    /**
     * @return The bot threshold is used to determine whether the request is a bot or a human. The score ranges between 0 and 1, where 1 is a human interaction and 0 is a bot. If the score is below this threshold, the request is considered a bot.
     * 
     */
    public Optional<Double> botThreshold() {
        return Optional.ofNullable(this.botThreshold);
    }
    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A custom name for your connector.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Override the default assessment model. Note: Overriding assessment is intended for automated testing and should not be utilized in production environments.
     * 
     */
    public Optional<Boolean> overrideAssessment() {
        return Optional.ofNullable(this.overrideAssessment);
    }
    /**
     * @return The Google Cloud project ID where the reCAPTCHA Enterprise is managed.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The site key is used to invoke reCAPTCHA Enterprise service on your site or mobile application.
     * 
     */
    public String siteKey() {
        return this.siteKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectConnectorsRecaptchaEnterprise defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKey;
        private @Nullable Double assessmentScore;
        private @Nullable String baseUrl;
        private @Nullable Double botThreshold;
        private @Nullable String description;
        private @Nullable String id;
        private String name;
        private @Nullable Boolean overrideAssessment;
        private String projectId;
        private String siteKey;
        public Builder() {}
        public Builder(ProjectConnectorsRecaptchaEnterprise defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.assessmentScore = defaults.assessmentScore;
    	      this.baseUrl = defaults.baseUrl;
    	      this.botThreshold = defaults.botThreshold;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.overrideAssessment = defaults.overrideAssessment;
    	      this.projectId = defaults.projectId;
    	      this.siteKey = defaults.siteKey;
        }

        @CustomType.Setter
        public Builder apiKey(String apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsRecaptchaEnterprise", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder assessmentScore(@Nullable Double assessmentScore) {

            this.assessmentScore = assessmentScore;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrl(@Nullable String baseUrl) {

            this.baseUrl = baseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder botThreshold(@Nullable Double botThreshold) {

            this.botThreshold = botThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsRecaptchaEnterprise", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overrideAssessment(@Nullable Boolean overrideAssessment) {

            this.overrideAssessment = overrideAssessment;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsRecaptchaEnterprise", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder siteKey(String siteKey) {
            if (siteKey == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsRecaptchaEnterprise", "siteKey");
            }
            this.siteKey = siteKey;
            return this;
        }
        public ProjectConnectorsRecaptchaEnterprise build() {
            final var _resultValue = new ProjectConnectorsRecaptchaEnterprise();
            _resultValue.apiKey = apiKey;
            _resultValue.assessmentScore = assessmentScore;
            _resultValue.baseUrl = baseUrl;
            _resultValue.botThreshold = botThreshold;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.overrideAssessment = overrideAssessment;
            _resultValue.projectId = projectId;
            _resultValue.siteKey = siteKey;
            return _resultValue;
        }
    }
}
