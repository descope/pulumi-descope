// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectConnectorsSalesforce {
    /**
     * @return The Salesforce API base URL.
     * 
     */
    private String baseUrl;
    /**
     * @return The consumer key of the connected app.
     * 
     */
    private String clientId;
    /**
     * @return The consumer secret of the connected app.
     * 
     */
    private String clientSecret;
    /**
     * @return A description of what your connector is used for.
     * 
     */
    private @Nullable String description;
    private @Nullable String id;
    /**
     * @return A custom name for your connector.
     * 
     */
    private String name;
    /**
     * @return REST API Version.
     * 
     */
    private String version;

    private ProjectConnectorsSalesforce() {}
    /**
     * @return The Salesforce API base URL.
     * 
     */
    public String baseUrl() {
        return this.baseUrl;
    }
    /**
     * @return The consumer key of the connected app.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The consumer secret of the connected app.
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }
    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A custom name for your connector.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return REST API Version.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectConnectorsSalesforce defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baseUrl;
        private String clientId;
        private String clientSecret;
        private @Nullable String description;
        private @Nullable String id;
        private String name;
        private String version;
        public Builder() {}
        public Builder(ProjectConnectorsSalesforce defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseUrl = defaults.baseUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder baseUrl(String baseUrl) {
            if (baseUrl == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsSalesforce", "baseUrl");
            }
            this.baseUrl = baseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsSalesforce", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            if (clientSecret == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsSalesforce", "clientSecret");
            }
            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsSalesforce", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsSalesforce", "version");
            }
            this.version = version;
            return this;
        }
        public ProjectConnectorsSalesforce build() {
            final var _resultValue = new ProjectConnectorsSalesforce();
            _resultValue.baseUrl = baseUrl;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
