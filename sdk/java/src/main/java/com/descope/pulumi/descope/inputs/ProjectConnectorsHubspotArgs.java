// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectConnectorsHubspotArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectConnectorsHubspotArgs Empty = new ProjectConnectorsHubspotArgs();

    /**
     * The HubSpot private API access token generated for the Descope service.
     * 
     */
    @Import(name="accessToken", required=true)
    private Output<String> accessToken;

    /**
     * @return The HubSpot private API access token generated for the Descope service.
     * 
     */
    public Output<String> accessToken() {
        return this.accessToken;
    }

    /**
     * The base URL of the HubSpot API, when using a custom domain in HubSpot, default value is https://api.hubapi.com .
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return The base URL of the HubSpot API, when using a custom domain in HubSpot, default value is https://api.hubapi.com .
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * A description of what your connector is used for.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A custom name for your connector.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A custom name for your connector.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Whether the connector should send all requests from specific static IPs.
     * 
     */
    @Import(name="useStaticIps")
    private @Nullable Output<Boolean> useStaticIps;

    /**
     * @return Whether the connector should send all requests from specific static IPs.
     * 
     */
    public Optional<Output<Boolean>> useStaticIps() {
        return Optional.ofNullable(this.useStaticIps);
    }

    private ProjectConnectorsHubspotArgs() {}

    private ProjectConnectorsHubspotArgs(ProjectConnectorsHubspotArgs $) {
        this.accessToken = $.accessToken;
        this.baseUrl = $.baseUrl;
        this.description = $.description;
        this.id = $.id;
        this.name = $.name;
        this.useStaticIps = $.useStaticIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectConnectorsHubspotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectConnectorsHubspotArgs $;

        public Builder() {
            $ = new ProjectConnectorsHubspotArgs();
        }

        public Builder(ProjectConnectorsHubspotArgs defaults) {
            $ = new ProjectConnectorsHubspotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessToken The HubSpot private API access token generated for the Descope service.
         * 
         * @return builder
         * 
         */
        public Builder accessToken(Output<String> accessToken) {
            $.accessToken = accessToken;
            return this;
        }

        /**
         * @param accessToken The HubSpot private API access token generated for the Descope service.
         * 
         * @return builder
         * 
         */
        public Builder accessToken(String accessToken) {
            return accessToken(Output.of(accessToken));
        }

        /**
         * @param baseUrl The base URL of the HubSpot API, when using a custom domain in HubSpot, default value is https://api.hubapi.com .
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The base URL of the HubSpot API, when using a custom domain in HubSpot, default value is https://api.hubapi.com .
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param useStaticIps Whether the connector should send all requests from specific static IPs.
         * 
         * @return builder
         * 
         */
        public Builder useStaticIps(@Nullable Output<Boolean> useStaticIps) {
            $.useStaticIps = useStaticIps;
            return this;
        }

        /**
         * @param useStaticIps Whether the connector should send all requests from specific static IPs.
         * 
         * @return builder
         * 
         */
        public Builder useStaticIps(Boolean useStaticIps) {
            return useStaticIps(Output.of(useStaticIps));
        }

        public ProjectConnectorsHubspotArgs build() {
            if ($.accessToken == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsHubspotArgs", "accessToken");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsHubspotArgs", "name");
            }
            return $;
        }
    }

}
