// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectConnectorsTwilioCoreAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectConnectorsTwilioCoreAuthenticationArgs Empty = new ProjectConnectorsTwilioCoreAuthenticationArgs();

    /**
     * Twilio API Key for authentication (used with API Secret).
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return Twilio API Key for authentication (used with API Secret).
     * 
     */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * Twilio API Secret for authentication (used with API Key).
     * 
     */
    @Import(name="apiSecret")
    private @Nullable Output<String> apiSecret;

    /**
     * @return Twilio API Secret for authentication (used with API Key).
     * 
     */
    public Optional<Output<String>> apiSecret() {
        return Optional.ofNullable(this.apiSecret);
    }

    /**
     * Twilio Auth Token for authentication.
     * 
     */
    @Import(name="authToken")
    private @Nullable Output<String> authToken;

    /**
     * @return Twilio Auth Token for authentication.
     * 
     */
    public Optional<Output<String>> authToken() {
        return Optional.ofNullable(this.authToken);
    }

    private ProjectConnectorsTwilioCoreAuthenticationArgs() {}

    private ProjectConnectorsTwilioCoreAuthenticationArgs(ProjectConnectorsTwilioCoreAuthenticationArgs $) {
        this.apiKey = $.apiKey;
        this.apiSecret = $.apiSecret;
        this.authToken = $.authToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectConnectorsTwilioCoreAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectConnectorsTwilioCoreAuthenticationArgs $;

        public Builder() {
            $ = new ProjectConnectorsTwilioCoreAuthenticationArgs();
        }

        public Builder(ProjectConnectorsTwilioCoreAuthenticationArgs defaults) {
            $ = new ProjectConnectorsTwilioCoreAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey Twilio API Key for authentication (used with API Secret).
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey Twilio API Key for authentication (used with API Secret).
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param apiSecret Twilio API Secret for authentication (used with API Key).
         * 
         * @return builder
         * 
         */
        public Builder apiSecret(@Nullable Output<String> apiSecret) {
            $.apiSecret = apiSecret;
            return this;
        }

        /**
         * @param apiSecret Twilio API Secret for authentication (used with API Key).
         * 
         * @return builder
         * 
         */
        public Builder apiSecret(String apiSecret) {
            return apiSecret(Output.of(apiSecret));
        }

        /**
         * @param authToken Twilio Auth Token for authentication.
         * 
         * @return builder
         * 
         */
        public Builder authToken(@Nullable Output<String> authToken) {
            $.authToken = authToken;
            return this;
        }

        /**
         * @param authToken Twilio Auth Token for authentication.
         * 
         * @return builder
         * 
         */
        public Builder authToken(String authToken) {
            return authToken(Output.of(authToken));
        }

        public ProjectConnectorsTwilioCoreAuthenticationArgs build() {
            return $;
        }
    }

}
