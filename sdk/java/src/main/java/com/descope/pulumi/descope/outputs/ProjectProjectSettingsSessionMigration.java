// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectProjectSettingsSessionMigration {
    /**
     * @return The audience value if needed by the vendor.
     * 
     */
    private @Nullable String audience;
    /**
     * @return The unique client ID for the vendor.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return The domain value if needed by the vendor.
     * 
     */
    private @Nullable String domain;
    /**
     * @return An issuer URL if needed by the vendor.
     * 
     */
    private @Nullable String issuer;
    /**
     * @return A set of attributes from the vendor&#39;s user that should be used to match with the Descope user&#39;s login ID.
     * 
     */
    private @Nullable List<String> loginidMatchedAttributes;
    /**
     * @return The name of the vendor the sessions are migrated from, in all lowercase.
     * 
     */
    private @Nullable String vendor;

    private ProjectProjectSettingsSessionMigration() {}
    /**
     * @return The audience value if needed by the vendor.
     * 
     */
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }
    /**
     * @return The unique client ID for the vendor.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return The domain value if needed by the vendor.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return An issuer URL if needed by the vendor.
     * 
     */
    public Optional<String> issuer() {
        return Optional.ofNullable(this.issuer);
    }
    /**
     * @return A set of attributes from the vendor&#39;s user that should be used to match with the Descope user&#39;s login ID.
     * 
     */
    public List<String> loginidMatchedAttributes() {
        return this.loginidMatchedAttributes == null ? List.of() : this.loginidMatchedAttributes;
    }
    /**
     * @return The name of the vendor the sessions are migrated from, in all lowercase.
     * 
     */
    public Optional<String> vendor() {
        return Optional.ofNullable(this.vendor);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectProjectSettingsSessionMigration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String audience;
        private @Nullable String clientId;
        private @Nullable String domain;
        private @Nullable String issuer;
        private @Nullable List<String> loginidMatchedAttributes;
        private @Nullable String vendor;
        public Builder() {}
        public Builder(ProjectProjectSettingsSessionMigration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.clientId = defaults.clientId;
    	      this.domain = defaults.domain;
    	      this.issuer = defaults.issuer;
    	      this.loginidMatchedAttributes = defaults.loginidMatchedAttributes;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder audience(@Nullable String audience) {

            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {

            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder domain(@Nullable String domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(@Nullable String issuer) {

            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder loginidMatchedAttributes(@Nullable List<String> loginidMatchedAttributes) {

            this.loginidMatchedAttributes = loginidMatchedAttributes;
            return this;
        }
        public Builder loginidMatchedAttributes(String... loginidMatchedAttributes) {
            return loginidMatchedAttributes(List.of(loginidMatchedAttributes));
        }
        @CustomType.Setter
        public Builder vendor(@Nullable String vendor) {

            this.vendor = vendor;
            return this;
        }
        public ProjectProjectSettingsSessionMigration build() {
            final var _resultValue = new ProjectProjectSettingsSessionMigration();
            _resultValue.audience = audience;
            _resultValue.clientId = clientId;
            _resultValue.domain = domain;
            _resultValue.issuer = issuer;
            _resultValue.loginidMatchedAttributes = loginidMatchedAttributes;
            _resultValue.vendor = vendor;
            return _resultValue;
        }
    }
}
