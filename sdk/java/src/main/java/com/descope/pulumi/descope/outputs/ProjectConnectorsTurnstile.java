// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectConnectorsTurnstile {
    /**
     * @return A description of what your connector is used for.
     * 
     */
    private @Nullable String description;
    private @Nullable String id;
    /**
     * @return A custom name for your connector.
     * 
     */
    private String name;
    /**
     * @return The secret key authorizes communication between Descope backend and the Turnstile server to verify the user&#39;s response.
     * 
     */
    private String secretKey;
    /**
     * @return The site key is used to invoke Turnstile service on your site or mobile application.
     * 
     */
    private String siteKey;

    private ProjectConnectorsTurnstile() {}
    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A custom name for your connector.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The secret key authorizes communication between Descope backend and the Turnstile server to verify the user&#39;s response.
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return The site key is used to invoke Turnstile service on your site or mobile application.
     * 
     */
    public String siteKey() {
        return this.siteKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectConnectorsTurnstile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String id;
        private String name;
        private String secretKey;
        private String siteKey;
        public Builder() {}
        public Builder(ProjectConnectorsTurnstile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.secretKey = defaults.secretKey;
    	      this.siteKey = defaults.siteKey;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsTurnstile", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsTurnstile", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder siteKey(String siteKey) {
            if (siteKey == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsTurnstile", "siteKey");
            }
            this.siteKey = siteKey;
            return this;
        }
        public ProjectConnectorsTurnstile build() {
            final var _resultValue = new ProjectConnectorsTurnstile();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.secretKey = secretKey;
            _resultValue.siteKey = siteKey;
            return _resultValue;
        }
    }
}
