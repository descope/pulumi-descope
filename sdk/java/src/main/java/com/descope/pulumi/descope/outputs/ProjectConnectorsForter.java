// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectConnectorsForter {
    /**
     * @return A description of what your connector is used for.
     * 
     */
    private @Nullable String description;
    private @Nullable String id;
    /**
     * @return A custom name for your connector.
     * 
     */
    private String name;
    /**
     * @return Override the user IP address.
     * 
     */
    private @Nullable String overrideIpAddress;
    /**
     * @return Override the user email.
     * 
     */
    private @Nullable String overrideUserEmail;
    /**
     * @return Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
     * 
     */
    private @Nullable Boolean overrides;
    /**
     * @return The Forter secret key.
     * 
     */
    private String secretKey;
    /**
     * @return The Forter site ID.
     * 
     */
    private String siteId;

    private ProjectConnectorsForter() {}
    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A custom name for your connector.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Override the user IP address.
     * 
     */
    public Optional<String> overrideIpAddress() {
        return Optional.ofNullable(this.overrideIpAddress);
    }
    /**
     * @return Override the user email.
     * 
     */
    public Optional<String> overrideUserEmail() {
        return Optional.ofNullable(this.overrideUserEmail);
    }
    /**
     * @return Override the user&#39;s IP address or email so that Forter can provide a specific decision or recommendation. Contact the Forter team for further details. Note: Overriding the user IP address or email is intended for testing purpose and should not be utilized in production environments.
     * 
     */
    public Optional<Boolean> overrides() {
        return Optional.ofNullable(this.overrides);
    }
    /**
     * @return The Forter secret key.
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return The Forter site ID.
     * 
     */
    public String siteId() {
        return this.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectConnectorsForter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String id;
        private String name;
        private @Nullable String overrideIpAddress;
        private @Nullable String overrideUserEmail;
        private @Nullable Boolean overrides;
        private String secretKey;
        private String siteId;
        public Builder() {}
        public Builder(ProjectConnectorsForter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.overrideIpAddress = defaults.overrideIpAddress;
    	      this.overrideUserEmail = defaults.overrideUserEmail;
    	      this.overrides = defaults.overrides;
    	      this.secretKey = defaults.secretKey;
    	      this.siteId = defaults.siteId;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsForter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overrideIpAddress(@Nullable String overrideIpAddress) {

            this.overrideIpAddress = overrideIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder overrideUserEmail(@Nullable String overrideUserEmail) {

            this.overrideUserEmail = overrideUserEmail;
            return this;
        }
        @CustomType.Setter
        public Builder overrides(@Nullable Boolean overrides) {

            this.overrides = overrides;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsForter", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("ProjectConnectorsForter", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        public ProjectConnectorsForter build() {
            final var _resultValue = new ProjectConnectorsForter();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.overrideIpAddress = overrideIpAddress;
            _resultValue.overrideUserEmail = overrideUserEmail;
            _resultValue.overrides = overrides;
            _resultValue.secretKey = secretKey;
            _resultValue.siteId = siteId;
            return _resultValue;
        }
    }
}
