// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectConnectorsSalesforceMarketingCloudArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectConnectorsSalesforceMarketingCloudArgs Empty = new ProjectConnectorsSalesforceMarketingCloudArgs();

    /**
     * Account identifier, or MID, of the target business unit.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account identifier, or MID, of the target business unit.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Client ID issued when you create the API integration in Installed Packages.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return Client ID issued when you create the API integration in Installed Packages.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * Client secret issued when you create the API integration in Installed Packages.
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    /**
     * @return Client secret issued when you create the API integration in Installed Packages.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * A description of what your connector is used for.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of what your connector is used for.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A custom name for your connector.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A custom name for your connector.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Space-separated list of data-access permissions for your connector.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Space-separated list of data-access permissions for your connector.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The Salesforce Marketing Cloud endpoint subdomain.
     * 
     */
    @Import(name="subdomain", required=true)
    private Output<String> subdomain;

    /**
     * @return The Salesforce Marketing Cloud endpoint subdomain.
     * 
     */
    public Output<String> subdomain() {
        return this.subdomain;
    }

    private ProjectConnectorsSalesforceMarketingCloudArgs() {}

    private ProjectConnectorsSalesforceMarketingCloudArgs(ProjectConnectorsSalesforceMarketingCloudArgs $) {
        this.accountId = $.accountId;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.description = $.description;
        this.id = $.id;
        this.name = $.name;
        this.scope = $.scope;
        this.subdomain = $.subdomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectConnectorsSalesforceMarketingCloudArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectConnectorsSalesforceMarketingCloudArgs $;

        public Builder() {
            $ = new ProjectConnectorsSalesforceMarketingCloudArgs();
        }

        public Builder(ProjectConnectorsSalesforceMarketingCloudArgs defaults) {
            $ = new ProjectConnectorsSalesforceMarketingCloudArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier, or MID, of the target business unit.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account identifier, or MID, of the target business unit.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param clientId Client ID issued when you create the API integration in Installed Packages.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID issued when you create the API integration in Installed Packages.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client secret issued when you create the API integration in Installed Packages.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client secret issued when you create the API integration in Installed Packages.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of what your connector is used for.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A custom name for your connector.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scope Space-separated list of data-access permissions for your connector.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Space-separated list of data-access permissions for your connector.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param subdomain The Salesforce Marketing Cloud endpoint subdomain.
         * 
         * @return builder
         * 
         */
        public Builder subdomain(Output<String> subdomain) {
            $.subdomain = subdomain;
            return this;
        }

        /**
         * @param subdomain The Salesforce Marketing Cloud endpoint subdomain.
         * 
         * @return builder
         * 
         */
        public Builder subdomain(String subdomain) {
            return subdomain(Output.of(subdomain));
        }

        public ProjectConnectorsSalesforceMarketingCloudArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsSalesforceMarketingCloudArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsSalesforceMarketingCloudArgs", "clientSecret");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsSalesforceMarketingCloudArgs", "name");
            }
            if ($.subdomain == null) {
                throw new MissingRequiredPropertyException("ProjectConnectorsSalesforceMarketingCloudArgs", "subdomain");
            }
            return $;
        }
    }

}
