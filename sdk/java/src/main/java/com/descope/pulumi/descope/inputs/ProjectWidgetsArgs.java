// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProjectWidgetsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectWidgetsArgs Empty = new ProjectWidgetsArgs();

    /**
     * The JSON data defining the widget. This will usually be exported as a `.json` file from the Descope console, and set in the `.tf` file using the `data = file(&#34;...&#34;)` syntax.
     * 
     */
    @Import(name="data", required=true)
    private Output<String> data;

    /**
     * @return The JSON data defining the widget. This will usually be exported as a `.json` file from the Descope console, and set in the `.tf` file using the `data = file(&#34;...&#34;)` syntax.
     * 
     */
    public Output<String> data() {
        return this.data;
    }

    private ProjectWidgetsArgs() {}

    private ProjectWidgetsArgs(ProjectWidgetsArgs $) {
        this.data = $.data;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectWidgetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectWidgetsArgs $;

        public Builder() {
            $ = new ProjectWidgetsArgs();
        }

        public Builder(ProjectWidgetsArgs defaults) {
            $ = new ProjectWidgetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param data The JSON data defining the widget. This will usually be exported as a `.json` file from the Descope console, and set in the `.tf` file using the `data = file(&#34;...&#34;)` syntax.
         * 
         * @return builder
         * 
         */
        public Builder data(Output<String> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data The JSON data defining the widget. This will usually be exported as a `.json` file from the Descope console, and set in the `.tf` file using the `data = file(&#34;...&#34;)` syntax.
         * 
         * @return builder
         * 
         */
        public Builder data(String data) {
            return data(Output.of(data));
        }

        public ProjectWidgetsArgs build() {
            if ($.data == null) {
                throw new MissingRequiredPropertyException("ProjectWidgetsArgs", "data");
            }
            return $;
        }
    }

}
