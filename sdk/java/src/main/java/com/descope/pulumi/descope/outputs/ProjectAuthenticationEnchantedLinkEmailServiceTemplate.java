// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectAuthenticationEnchantedLinkEmailServiceTemplate {
    /**
     * @return Whether this email template is currently active and in use.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return HTML content of the email message body, required if `usePlainTextBody` isn&#39;t set.
     * 
     */
    private @Nullable String htmlBody;
    private @Nullable String id;
    /**
     * @return Unique name for this email template.
     * 
     */
    private String name;
    /**
     * @return Plain text version of the email message body, required if `usePlainTextBody` is set to `true`.
     * 
     */
    private @Nullable String plainTextBody;
    /**
     * @return Subject line of the email message.
     * 
     */
    private String subject;
    /**
     * @return Whether to use the plain text body instead of HTML for the email.
     * 
     */
    private @Nullable Boolean usePlainTextBody;

    private ProjectAuthenticationEnchantedLinkEmailServiceTemplate() {}
    /**
     * @return Whether this email template is currently active and in use.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return HTML content of the email message body, required if `usePlainTextBody` isn&#39;t set.
     * 
     */
    public Optional<String> htmlBody() {
        return Optional.ofNullable(this.htmlBody);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Unique name for this email template.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Plain text version of the email message body, required if `usePlainTextBody` is set to `true`.
     * 
     */
    public Optional<String> plainTextBody() {
        return Optional.ofNullable(this.plainTextBody);
    }
    /**
     * @return Subject line of the email message.
     * 
     */
    public String subject() {
        return this.subject;
    }
    /**
     * @return Whether to use the plain text body instead of HTML for the email.
     * 
     */
    public Optional<Boolean> usePlainTextBody() {
        return Optional.ofNullable(this.usePlainTextBody);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectAuthenticationEnchantedLinkEmailServiceTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable String htmlBody;
        private @Nullable String id;
        private String name;
        private @Nullable String plainTextBody;
        private String subject;
        private @Nullable Boolean usePlainTextBody;
        public Builder() {}
        public Builder(ProjectAuthenticationEnchantedLinkEmailServiceTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.htmlBody = defaults.htmlBody;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.plainTextBody = defaults.plainTextBody;
    	      this.subject = defaults.subject;
    	      this.usePlainTextBody = defaults.usePlainTextBody;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {

            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder htmlBody(@Nullable String htmlBody) {

            this.htmlBody = htmlBody;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectAuthenticationEnchantedLinkEmailServiceTemplate", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder plainTextBody(@Nullable String plainTextBody) {

            this.plainTextBody = plainTextBody;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            if (subject == null) {
              throw new MissingRequiredPropertyException("ProjectAuthenticationEnchantedLinkEmailServiceTemplate", "subject");
            }
            this.subject = subject;
            return this;
        }
        @CustomType.Setter
        public Builder usePlainTextBody(@Nullable Boolean usePlainTextBody) {

            this.usePlainTextBody = usePlainTextBody;
            return this;
        }
        public ProjectAuthenticationEnchantedLinkEmailServiceTemplate build() {
            final var _resultValue = new ProjectAuthenticationEnchantedLinkEmailServiceTemplate();
            _resultValue.active = active;
            _resultValue.htmlBody = htmlBody;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.plainTextBody = plainTextBody;
            _resultValue.subject = subject;
            _resultValue.usePlainTextBody = usePlainTextBody;
            return _resultValue;
        }
    }
}
