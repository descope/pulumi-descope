// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.descope.pulumi.descope.inputs.ProjectAttributesTenantArgs;
import com.descope.pulumi.descope.inputs.ProjectAttributesUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectAttributesArgs Empty = new ProjectAttributesArgs();

    /**
     * A list of `TenantAttribute`. Read the description below.
     * 
     */
    @Import(name="tenants")
    private @Nullable Output<List<ProjectAttributesTenantArgs>> tenants;

    /**
     * @return A list of `TenantAttribute`. Read the description below.
     * 
     */
    public Optional<Output<List<ProjectAttributesTenantArgs>>> tenants() {
        return Optional.ofNullable(this.tenants);
    }

    /**
     * A list of `UserAttribute`. Read the description below.
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<ProjectAttributesUserArgs>> users;

    /**
     * @return A list of `UserAttribute`. Read the description below.
     * 
     */
    public Optional<Output<List<ProjectAttributesUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private ProjectAttributesArgs() {}

    private ProjectAttributesArgs(ProjectAttributesArgs $) {
        this.tenants = $.tenants;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectAttributesArgs $;

        public Builder() {
            $ = new ProjectAttributesArgs();
        }

        public Builder(ProjectAttributesArgs defaults) {
            $ = new ProjectAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tenants A list of `TenantAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder tenants(@Nullable Output<List<ProjectAttributesTenantArgs>> tenants) {
            $.tenants = tenants;
            return this;
        }

        /**
         * @param tenants A list of `TenantAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder tenants(List<ProjectAttributesTenantArgs> tenants) {
            return tenants(Output.of(tenants));
        }

        /**
         * @param tenants A list of `TenantAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder tenants(ProjectAttributesTenantArgs... tenants) {
            return tenants(List.of(tenants));
        }

        /**
         * @param users A list of `UserAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<ProjectAttributesUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users A list of `UserAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder users(List<ProjectAttributesUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users A list of `UserAttribute`. Read the description below.
         * 
         * @return builder
         * 
         */
        public Builder users(ProjectAttributesUserArgs... users) {
            return users(List.of(users));
        }

        public ProjectAttributesArgs build() {
            return $;
        }
    }

}
