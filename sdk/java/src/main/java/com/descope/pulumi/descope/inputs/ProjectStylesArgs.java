// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProjectStylesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectStylesArgs Empty = new ProjectStylesArgs();

    /**
     * The JSON data defining the visual styling and theme configuration used for authentication, widgets, etc.
     * 
     */
    @Import(name="data", required=true)
    private Output<String> data;

    /**
     * @return The JSON data defining the visual styling and theme configuration used for authentication, widgets, etc.
     * 
     */
    public Output<String> data() {
        return this.data;
    }

    private ProjectStylesArgs() {}

    private ProjectStylesArgs(ProjectStylesArgs $) {
        this.data = $.data;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectStylesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectStylesArgs $;

        public Builder() {
            $ = new ProjectStylesArgs();
        }

        public Builder(ProjectStylesArgs defaults) {
            $ = new ProjectStylesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param data The JSON data defining the visual styling and theme configuration used for authentication, widgets, etc.
         * 
         * @return builder
         * 
         */
        public Builder data(Output<String> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data The JSON data defining the visual styling and theme configuration used for authentication, widgets, etc.
         * 
         * @return builder
         * 
         */
        public Builder data(String data) {
            return data(Output.of(data));
        }

        public ProjectStylesArgs build() {
            if ($.data == null) {
                throw new MissingRequiredPropertyException("ProjectStylesArgs", "data");
            }
            return $;
        }
    }

}
