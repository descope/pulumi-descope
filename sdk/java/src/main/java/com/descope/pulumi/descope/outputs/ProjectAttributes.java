// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.outputs;

import com.descope.pulumi.descope.outputs.ProjectAttributesTenant;
import com.descope.pulumi.descope.outputs.ProjectAttributesUser;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ProjectAttributes {
    /**
     * @return A list of `TenantAttribute`. Read the description below.
     * 
     */
    private @Nullable List<ProjectAttributesTenant> tenants;
    /**
     * @return A list of `UserAttribute`. Read the description below.
     * 
     */
    private @Nullable List<ProjectAttributesUser> users;

    private ProjectAttributes() {}
    /**
     * @return A list of `TenantAttribute`. Read the description below.
     * 
     */
    public List<ProjectAttributesTenant> tenants() {
        return this.tenants == null ? List.of() : this.tenants;
    }
    /**
     * @return A list of `UserAttribute`. Read the description below.
     * 
     */
    public List<ProjectAttributesUser> users() {
        return this.users == null ? List.of() : this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectAttributes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ProjectAttributesTenant> tenants;
        private @Nullable List<ProjectAttributesUser> users;
        public Builder() {}
        public Builder(ProjectAttributes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tenants = defaults.tenants;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder tenants(@Nullable List<ProjectAttributesTenant> tenants) {

            this.tenants = tenants;
            return this;
        }
        public Builder tenants(ProjectAttributesTenant... tenants) {
            return tenants(List.of(tenants));
        }
        @CustomType.Setter
        public Builder users(@Nullable List<ProjectAttributesUser> users) {

            this.users = users;
            return this;
        }
        public Builder users(ProjectAttributesUser... users) {
            return users(List.of(users));
        }
        public ProjectAttributes build() {
            final var _resultValue = new ProjectAttributes();
            _resultValue.tenants = tenants;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
