// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectApplicationsOidcApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectApplicationsOidcApplicationArgs Empty = new ProjectApplicationsOidcApplicationArgs();

    /**
     * A list of supported claims. e.g. `sub`, `email`, `exp`.
     * 
     */
    @Import(name="claims")
    private @Nullable Output<List<String>> claims;

    /**
     * @return A list of supported claims. e.g. `sub`, `email`, `exp`.
     * 
     */
    public Optional<Output<List<String>>> claims() {
        return Optional.ofNullable(this.claims);
    }

    /**
     * A description for the OIDC application.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the OIDC application.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the application should be enabled or disabled.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Whether the application should be enabled or disabled.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP&#39;s request.
     * 
     */
    @Import(name="forceAuthentication")
    private @Nullable Output<Boolean> forceAuthentication;

    /**
     * @return This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP&#39;s request.
     * 
     */
    public Optional<Output<Boolean>> forceAuthentication() {
        return Optional.ofNullable(this.forceAuthentication);
    }

    /**
     * An optional identifier for the OIDC application.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return An optional identifier for the OIDC application.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).
     * 
     */
    @Import(name="loginPageUrl")
    private @Nullable Output<String> loginPageUrl;

    /**
     * @return The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).
     * 
     */
    public Optional<Output<String>> loginPageUrl() {
        return Optional.ofNullable(this.loginPageUrl);
    }

    /**
     * A logo for the OIDC application. Should be a hosted image URL.
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return A logo for the OIDC application. Should be a hosted image URL.
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * A name for the OIDC application.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A name for the OIDC application.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ProjectApplicationsOidcApplicationArgs() {}

    private ProjectApplicationsOidcApplicationArgs(ProjectApplicationsOidcApplicationArgs $) {
        this.claims = $.claims;
        this.description = $.description;
        this.disabled = $.disabled;
        this.forceAuthentication = $.forceAuthentication;
        this.id = $.id;
        this.loginPageUrl = $.loginPageUrl;
        this.logo = $.logo;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectApplicationsOidcApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectApplicationsOidcApplicationArgs $;

        public Builder() {
            $ = new ProjectApplicationsOidcApplicationArgs();
        }

        public Builder(ProjectApplicationsOidcApplicationArgs defaults) {
            $ = new ProjectApplicationsOidcApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param claims A list of supported claims. e.g. `sub`, `email`, `exp`.
         * 
         * @return builder
         * 
         */
        public Builder claims(@Nullable Output<List<String>> claims) {
            $.claims = claims;
            return this;
        }

        /**
         * @param claims A list of supported claims. e.g. `sub`, `email`, `exp`.
         * 
         * @return builder
         * 
         */
        public Builder claims(List<String> claims) {
            return claims(Output.of(claims));
        }

        /**
         * @param claims A list of supported claims. e.g. `sub`, `email`, `exp`.
         * 
         * @return builder
         * 
         */
        public Builder claims(String... claims) {
            return claims(List.of(claims));
        }

        /**
         * @param description A description for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disabled Whether the application should be enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Whether the application should be enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param forceAuthentication This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP&#39;s request.
         * 
         * @return builder
         * 
         */
        public Builder forceAuthentication(@Nullable Output<Boolean> forceAuthentication) {
            $.forceAuthentication = forceAuthentication;
            return this;
        }

        /**
         * @param forceAuthentication This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP&#39;s request.
         * 
         * @return builder
         * 
         */
        public Builder forceAuthentication(Boolean forceAuthentication) {
            return forceAuthentication(Output.of(forceAuthentication));
        }

        /**
         * @param id An optional identifier for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id An optional identifier for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param loginPageUrl The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).
         * 
         * @return builder
         * 
         */
        public Builder loginPageUrl(@Nullable Output<String> loginPageUrl) {
            $.loginPageUrl = loginPageUrl;
            return this;
        }

        /**
         * @param loginPageUrl The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).
         * 
         * @return builder
         * 
         */
        public Builder loginPageUrl(String loginPageUrl) {
            return loginPageUrl(Output.of(loginPageUrl));
        }

        /**
         * @param logo A logo for the OIDC application. Should be a hosted image URL.
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo A logo for the OIDC application. Should be a hosted image URL.
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param name A name for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name for the OIDC application.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ProjectApplicationsOidcApplicationArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ProjectApplicationsOidcApplicationArgs", "name");
            }
            return $;
        }
    }

}
