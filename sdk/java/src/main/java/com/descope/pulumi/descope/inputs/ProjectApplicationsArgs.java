// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.descope.pulumi.descope.inputs;

import com.descope.pulumi.descope.inputs.ProjectApplicationsOidcApplicationArgs;
import com.descope.pulumi.descope.inputs.ProjectApplicationsSamlApplicationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectApplicationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectApplicationsArgs Empty = new ProjectApplicationsArgs();

    /**
     * Applications using OpenID Connect (OIDC) for authentication.
     * 
     */
    @Import(name="oidcApplications")
    private @Nullable Output<List<ProjectApplicationsOidcApplicationArgs>> oidcApplications;

    /**
     * @return Applications using OpenID Connect (OIDC) for authentication.
     * 
     */
    public Optional<Output<List<ProjectApplicationsOidcApplicationArgs>>> oidcApplications() {
        return Optional.ofNullable(this.oidcApplications);
    }

    /**
     * Applications using SAML for authentication.
     * 
     */
    @Import(name="samlApplications")
    private @Nullable Output<List<ProjectApplicationsSamlApplicationArgs>> samlApplications;

    /**
     * @return Applications using SAML for authentication.
     * 
     */
    public Optional<Output<List<ProjectApplicationsSamlApplicationArgs>>> samlApplications() {
        return Optional.ofNullable(this.samlApplications);
    }

    private ProjectApplicationsArgs() {}

    private ProjectApplicationsArgs(ProjectApplicationsArgs $) {
        this.oidcApplications = $.oidcApplications;
        this.samlApplications = $.samlApplications;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectApplicationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectApplicationsArgs $;

        public Builder() {
            $ = new ProjectApplicationsArgs();
        }

        public Builder(ProjectApplicationsArgs defaults) {
            $ = new ProjectApplicationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oidcApplications Applications using OpenID Connect (OIDC) for authentication.
         * 
         * @return builder
         * 
         */
        public Builder oidcApplications(@Nullable Output<List<ProjectApplicationsOidcApplicationArgs>> oidcApplications) {
            $.oidcApplications = oidcApplications;
            return this;
        }

        /**
         * @param oidcApplications Applications using OpenID Connect (OIDC) for authentication.
         * 
         * @return builder
         * 
         */
        public Builder oidcApplications(List<ProjectApplicationsOidcApplicationArgs> oidcApplications) {
            return oidcApplications(Output.of(oidcApplications));
        }

        /**
         * @param oidcApplications Applications using OpenID Connect (OIDC) for authentication.
         * 
         * @return builder
         * 
         */
        public Builder oidcApplications(ProjectApplicationsOidcApplicationArgs... oidcApplications) {
            return oidcApplications(List.of(oidcApplications));
        }

        /**
         * @param samlApplications Applications using SAML for authentication.
         * 
         * @return builder
         * 
         */
        public Builder samlApplications(@Nullable Output<List<ProjectApplicationsSamlApplicationArgs>> samlApplications) {
            $.samlApplications = samlApplications;
            return this;
        }

        /**
         * @param samlApplications Applications using SAML for authentication.
         * 
         * @return builder
         * 
         */
        public Builder samlApplications(List<ProjectApplicationsSamlApplicationArgs> samlApplications) {
            return samlApplications(Output.of(samlApplications));
        }

        /**
         * @param samlApplications Applications using SAML for authentication.
         * 
         * @return builder
         * 
         */
        public Builder samlApplications(ProjectApplicationsSamlApplicationArgs... samlApplications) {
            return samlApplications(List.of(samlApplications));
        }

        public ProjectApplicationsArgs build() {
            return $;
        }
    }

}
