// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectAuthenticationOauthSystemMicrosoft
    {
        public readonly string? AuthorizationEndpoint;
        public readonly ImmutableDictionary<string, string>? ClaimMapping;
        public readonly string? ClientId;
        public readonly string? ClientSecret;
        public readonly string? Description;
        public readonly bool? Disabled;
        public readonly string? GrantType;
        public readonly string? Issuer;
        public readonly string? JwksEndpoint;
        public readonly string? Logo;
        public readonly bool? MergeUserAccounts;
        public readonly ImmutableArray<string> Prompts;
        public readonly Outputs.ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement? ProviderTokenManagement;
        public readonly ImmutableArray<string> Scopes;
        public readonly string? TokenEndpoint;
        public readonly string? UserInfoEndpoint;

        [OutputConstructor]
        private ProjectAuthenticationOauthSystemMicrosoft(
            string? authorizationEndpoint,

            ImmutableDictionary<string, string>? claimMapping,

            string? clientId,

            string? clientSecret,

            string? description,

            bool? disabled,

            string? grantType,

            string? issuer,

            string? jwksEndpoint,

            string? logo,

            bool? mergeUserAccounts,

            ImmutableArray<string> prompts,

            Outputs.ProjectAuthenticationOauthSystemMicrosoftProviderTokenManagement? providerTokenManagement,

            ImmutableArray<string> scopes,

            string? tokenEndpoint,

            string? userInfoEndpoint)
        {
            AuthorizationEndpoint = authorizationEndpoint;
            ClaimMapping = claimMapping;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Description = description;
            Disabled = disabled;
            GrantType = grantType;
            Issuer = issuer;
            JwksEndpoint = jwksEndpoint;
            Logo = logo;
            MergeUserAccounts = mergeUserAccounts;
            Prompts = prompts;
            ProviderTokenManagement = providerTokenManagement;
            Scopes = scopes;
            TokenEndpoint = tokenEndpoint;
            UserInfoEndpoint = userInfoEndpoint;
        }
    }
}
