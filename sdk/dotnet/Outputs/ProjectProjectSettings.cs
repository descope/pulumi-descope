// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectProjectSettings
    {
        /// <summary>
        /// Name of the access key JWT Template.
        /// </summary>
        public readonly string? AccessKeyJwtTemplate;
        /// <summary>
        /// The expiry time for access key session tokens. Use values such as "10 minutes", "4 hours", etc. The value needs to be at least 3 minutes and can't be longer than 4 weeks.
        /// </summary>
        public readonly string? AccessKeySessionTokenExpiration;
        public readonly string? AppUrl;
        /// <summary>
        /// The list of approved domains that are allowed for redirect and verification URLs for different authentication methods.
        /// </summary>
        public readonly ImmutableArray<string> ApprovedDomains;
        /// <summary>
        /// The domain name for custom domain set up. To read more about custom domain and cookie policy click [here](https://docs.descope.com/how-to-deploy-to-production/custom-domain).
        /// </summary>
        public readonly string? CookieDomain;
        /// <summary>
        /// Use "strict", "lax" or "none". To read more about custom domain and cookie policy click [here](https://docs.descope.com/how-to-deploy-to-production/custom-domain).
        /// </summary>
        public readonly string? CookiePolicy;
        public readonly string? CustomDomain;
        /// <summary>
        /// Use `True` to enable session inactivity. To read more about session inactivity click [here](https://docs.descope.com/project-settings#session-inactivity).
        /// </summary>
        public readonly bool? EnableInactivity;
        /// <summary>
        /// The session inactivity time. Use values such as "15 minutes", "1 hour", etc. The minimum value is "10 minutes".
        /// </summary>
        public readonly string? InactivityTime;
        /// <summary>
        /// The expiry time for the refresh token, after which the user must log in again. Use values such as "4 weeks", "14 days", etc. The minimum value is "3 minutes".
        /// </summary>
        public readonly string? RefreshTokenExpiration;
        /// <summary>
        /// Every time the user refreshes their session token via their refresh token, the refresh token itself is also updated to a new one.
        /// </summary>
        public readonly bool? RefreshTokenRotation;
        /// <summary>
        /// The expiry time of the session token, used for accessing the application's resources. The value needs to be at least 3 minutes and can't be longer than the refresh token expiration.
        /// </summary>
        public readonly string? SessionTokenExpiration;
        /// <summary>
        /// The expiry time for the step up token, after which it will not be valid and the user will automatically go back to the session token.
        /// </summary>
        public readonly string? StepUpTokenExpiration;
        /// <summary>
        /// Define a regular expression so that whenever a user is created with a matching login ID it will automatically be marked as a test user.
        /// </summary>
        public readonly string? TestUsersLoginidRegexp;
        /// <summary>
        /// A 6 digit static OTP code for use with test users.
        /// </summary>
        public readonly string? TestUsersStaticOtp;
        /// <summary>
        /// The pattern of the verifiers that will be used for testing.
        /// </summary>
        public readonly string? TestUsersVerifierRegexp;
        /// <summary>
        /// Configure how refresh tokens are managed by the Descope SDKs. Must be either `response_body` or `cookies`. The default value is `response_body`.
        /// </summary>
        public readonly string? TokenResponseMethod;
        /// <summary>
        /// The expiry time for the trusted device token. The minimum value is "3 minutes".
        /// </summary>
        public readonly string? TrustedDeviceTokenExpiration;
        /// <summary>
        /// Name of the user JWT Template.
        /// </summary>
        public readonly string? UserJwtTemplate;

        [OutputConstructor]
        private ProjectProjectSettings(
            string? accessKeyJwtTemplate,

            string? accessKeySessionTokenExpiration,

            string? appUrl,

            ImmutableArray<string> approvedDomains,

            string? cookieDomain,

            string? cookiePolicy,

            string? customDomain,

            bool? enableInactivity,

            string? inactivityTime,

            string? refreshTokenExpiration,

            bool? refreshTokenRotation,

            string? sessionTokenExpiration,

            string? stepUpTokenExpiration,

            string? testUsersLoginidRegexp,

            string? testUsersStaticOtp,

            string? testUsersVerifierRegexp,

            string? tokenResponseMethod,

            string? trustedDeviceTokenExpiration,

            string? userJwtTemplate)
        {
            AccessKeyJwtTemplate = accessKeyJwtTemplate;
            AccessKeySessionTokenExpiration = accessKeySessionTokenExpiration;
            AppUrl = appUrl;
            ApprovedDomains = approvedDomains;
            CookieDomain = cookieDomain;
            CookiePolicy = cookiePolicy;
            CustomDomain = customDomain;
            EnableInactivity = enableInactivity;
            InactivityTime = inactivityTime;
            RefreshTokenExpiration = refreshTokenExpiration;
            RefreshTokenRotation = refreshTokenRotation;
            SessionTokenExpiration = sessionTokenExpiration;
            StepUpTokenExpiration = stepUpTokenExpiration;
            TestUsersLoginidRegexp = testUsersLoginidRegexp;
            TestUsersStaticOtp = testUsersStaticOtp;
            TestUsersVerifierRegexp = testUsersVerifierRegexp;
            TokenResponseMethod = tokenResponseMethod;
            TrustedDeviceTokenExpiration = trustedDeviceTokenExpiration;
            UserJwtTemplate = userJwtTemplate;
        }
    }
}
