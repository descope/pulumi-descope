// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Descope.Inputs
{

    public sealed class ProjectConnectorsLokaliseGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiToken", required: true)]
        private Input<string>? _apiToken;

        /// <summary>
        /// Lokalise API token.
        /// </summary>
        public Input<string>? ApiToken
        {
            get => _apiToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Optional) The ID of the payment card to use for translation orders. If not provided, the team credit will be used.
        /// </summary>
        [Input("cardId")]
        public Input<string>? CardId { get; set; }

        /// <summary>
        /// A description of what your connector is used for.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// A custom name for your connector.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Lokalise project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Lokalise team ID. If not provided, the oldest available team will be used.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The translation provider to use ('gengo', 'google', 'lokalise', 'deepl'), default is 'deepl'.
        /// </summary>
        [Input("translationProvider")]
        public Input<string>? TranslationProvider { get; set; }

        public ProjectConnectorsLokaliseGetArgs()
        {
        }
        public static new ProjectConnectorsLokaliseGetArgs Empty => new ProjectConnectorsLokaliseGetArgs();
    }
}
