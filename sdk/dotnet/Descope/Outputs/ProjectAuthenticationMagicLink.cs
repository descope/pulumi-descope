// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectAuthenticationMagicLink
    {
        /// <summary>
        /// Setting this to `True` will disallow using this authentication method directly via API and SDK calls. Note that this does not affect authentication flows that are configured to use this authentication method.
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// Settings related to sending emails as part of the magic link authentication.
        /// </summary>
        public readonly Outputs.ProjectAuthenticationMagicLinkEmailService? EmailService;
        /// <summary>
        /// How long the magic link remains valid before it expires.
        /// </summary>
        public readonly string? ExpirationTime;
        /// <summary>
        /// The URL to redirect users to after they log in using the magic link.
        /// </summary>
        public readonly string? RedirectUrl;
        /// <summary>
        /// Settings related to sending SMS messages as part of the magic link authentication.
        /// </summary>
        public readonly Outputs.ProjectAuthenticationMagicLinkTextService? TextService;

        [OutputConstructor]
        private ProjectAuthenticationMagicLink(
            bool? disabled,

            Outputs.ProjectAuthenticationMagicLinkEmailService? emailService,

            string? expirationTime,

            string? redirectUrl,

            Outputs.ProjectAuthenticationMagicLinkTextService? textService)
        {
            Disabled = disabled;
            EmailService = emailService;
            ExpirationTime = expirationTime;
            RedirectUrl = redirectUrl;
            TextService = textService;
        }
    }
}
