// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectConnectorsGoogleCloudLogging
    {
        /// <summary>
        /// Whether to enable streaming of audit events.
        /// </summary>
        public readonly bool? AuditEnabled;
        /// <summary>
        /// Specify which events will be sent to the external audit service (including tenant selection).
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectConnectorsGoogleCloudLoggingAuditFilter> AuditFilters;
        /// <summary>
        /// A description of what your connector is used for.
        /// </summary>
        public readonly string? Description;
        public readonly string? Id;
        /// <summary>
        /// A custom name for your connector.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A Service Account Key JSON file created from a service account on your Google Cloud project. This file is used to authenticate and authorize the connector to access Google Cloud Logging. The service account this key belongs to must have the appropriate permissions to write logs.
        /// </summary>
        public readonly string ServiceAccountKey;
        /// <summary>
        /// Whether to send troubleshooting events.
        /// </summary>
        public readonly bool? TroubleshootLogEnabled;

        [OutputConstructor]
        private ProjectConnectorsGoogleCloudLogging(
            bool? auditEnabled,

            ImmutableArray<Outputs.ProjectConnectorsGoogleCloudLoggingAuditFilter> auditFilters,

            string? description,

            string? id,

            string name,

            string serviceAccountKey,

            bool? troubleshootLogEnabled)
        {
            AuditEnabled = auditEnabled;
            AuditFilters = auditFilters;
            Description = description;
            Id = id;
            Name = name;
            ServiceAccountKey = serviceAccountKey;
            TroubleshootLogEnabled = troubleshootLogEnabled;
        }
    }
}
