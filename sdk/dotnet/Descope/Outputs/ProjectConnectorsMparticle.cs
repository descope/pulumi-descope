// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectConnectorsMparticle
    {
        /// <summary>
        /// The mParticle Server to Server Key generated for the Descope service.
        /// </summary>
        public readonly string ApiKey;
        /// <summary>
        /// The mParticle Server to Server Secret generated for the Descope service.
        /// </summary>
        public readonly string ApiSecret;
        /// <summary>
        /// The base URL of the mParticle API, when using a custom domain in mParticle. default value is https://s2s.mparticle.com/
        /// </summary>
        public readonly string? BaseUrl;
        /// <summary>
        /// The default environment of which connector send data to, either “production” or “development“. default value: production. This field can be overridden per event (see at flows).
        /// </summary>
        public readonly string? DefaultEnvironment;
        /// <summary>
        /// A description of what your connector is used for.
        /// </summary>
        public readonly string? Description;
        public readonly string? Id;
        /// <summary>
        /// A custom name for your connector.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Whether the connector should send all requests from specific static IPs.
        /// </summary>
        public readonly bool? UseStaticIps;

        [OutputConstructor]
        private ProjectConnectorsMparticle(
            string apiKey,

            string apiSecret,

            string? baseUrl,

            string? defaultEnvironment,

            string? description,

            string? id,

            string name,

            bool? useStaticIps)
        {
            ApiKey = apiKey;
            ApiSecret = apiSecret;
            BaseUrl = baseUrl;
            DefaultEnvironment = defaultEnvironment;
            Description = description;
            Id = id;
            Name = name;
            UseStaticIps = useStaticIps;
        }
    }
}
