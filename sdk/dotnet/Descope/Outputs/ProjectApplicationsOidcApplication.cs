// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Outputs
{

    [OutputType]
    public sealed class ProjectApplicationsOidcApplication
    {
        /// <summary>
        /// A list of supported claims. e.g. `Sub`, `Email`, `Exp`.
        /// </summary>
        public readonly ImmutableArray<string> Claims;
        /// <summary>
        /// A description for the OIDC application.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether the application should be enabled or disabled.
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// This configuration overrides the default behavior of the SSO application and forces the user to authenticate via the Descope flow, regardless of the SP's request.
        /// </summary>
        public readonly bool? ForceAuthentication;
        /// <summary>
        /// An optional identifier for the OIDC application.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The Flow Hosting URL. Read more about using this parameter with custom domain [here](https://docs.descope.com/sso-integrations/applications/saml-apps).
        /// </summary>
        public readonly string? LoginPageUrl;
        /// <summary>
        /// A logo for the OIDC application. Should be a hosted image URL.
        /// </summary>
        public readonly string? Logo;
        /// <summary>
        /// A name for the OIDC application.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ProjectApplicationsOidcApplication(
            ImmutableArray<string> claims,

            string? description,

            bool? disabled,

            bool? forceAuthentication,

            string? id,

            string? loginPageUrl,

            string? logo,

            string name)
        {
            Claims = claims;
            Description = description;
            Disabled = disabled;
            ForceAuthentication = forceAuthentication;
            Id = id;
            LoginPageUrl = loginPageUrl;
            Logo = logo;
            Name = name;
        }
    }
}
