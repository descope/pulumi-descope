// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Inputs
{

    public sealed class ProjectConnectorsArgs : global::Pulumi.ResourceArgs
    {
        [Input("abuseipdbs")]
        private InputList<Inputs.ProjectConnectorsAbuseipdbArgs>? _abuseipdbs;

        /// <summary>
        /// Utilize IP threat intelligence to block malicious login attempts with the AbuseIPDB connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsAbuseipdbArgs> Abuseipdbs
        {
            get => _abuseipdbs ?? (_abuseipdbs = new InputList<Inputs.ProjectConnectorsAbuseipdbArgs>());
            set => _abuseipdbs = value;
        }

        [Input("amplitudes")]
        private InputList<Inputs.ProjectConnectorsAmplitudeArgs>? _amplitudes;

        /// <summary>
        /// Track user activity and traits at any point in your user journey with the Amplitude connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsAmplitudeArgs> Amplitudes
        {
            get => _amplitudes ?? (_amplitudes = new InputList<Inputs.ProjectConnectorsAmplitudeArgs>());
            set => _amplitudes = value;
        }

        [Input("auditWebhooks")]
        private InputList<Inputs.ProjectConnectorsAuditWebhookArgs>? _auditWebhooks;

        /// <summary>
        /// Send audit events to a custom webhook.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsAuditWebhookArgs> AuditWebhooks
        {
            get => _auditWebhooks ?? (_auditWebhooks = new InputList<Inputs.ProjectConnectorsAuditWebhookArgs>());
            set => _auditWebhooks = value;
        }

        [Input("awsS3s")]
        private InputList<Inputs.ProjectConnectorsAwsS3Args>? _awsS3s;

        /// <summary>
        /// Stream authentication audit logs with the Amazon S3 connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsAwsS3Args> AwsS3s
        {
            get => _awsS3s ?? (_awsS3s = new InputList<Inputs.ProjectConnectorsAwsS3Args>());
            set => _awsS3s = value;
        }

        [Input("awsTranslates")]
        private InputList<Inputs.ProjectConnectorsAwsTranslateArgs>? _awsTranslates;

        /// <summary>
        /// Localize the language of your login and user journey screens with the Amazon Translate connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsAwsTranslateArgs> AwsTranslates
        {
            get => _awsTranslates ?? (_awsTranslates = new InputList<Inputs.ProjectConnectorsAwsTranslateArgs>());
            set => _awsTranslates = value;
        }

        [Input("bitsights")]
        private InputList<Inputs.ProjectConnectorsBitsightArgs>? _bitsights;

        /// <summary>
        /// Utilize threat intelligence to block malicious login attempts or check leaks with the Bitsight Threat Intelligence connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsBitsightArgs> Bitsights
        {
            get => _bitsights ?? (_bitsights = new InputList<Inputs.ProjectConnectorsBitsightArgs>());
            set => _bitsights = value;
        }

        [Input("datadogs")]
        private InputList<Inputs.ProjectConnectorsDatadogArgs>? _datadogs;

        /// <summary>
        /// Stream authentication audit logs with the Datadog connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsDatadogArgs> Datadogs
        {
            get => _datadogs ?? (_datadogs = new InputList<Inputs.ProjectConnectorsDatadogArgs>());
            set => _datadogs = value;
        }

        [Input("devrevGrows")]
        private InputList<Inputs.ProjectConnectorsDevrevGrowArgs>? _devrevGrows;

        /// <summary>
        /// DevRev Grow is a Growth CRM that brings salespeople, product marketers, and PMs onto an AI-native platform to follow the journey of a visitor to a lead, to a contact, and then to a user - to create a champion, not a churned user.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsDevrevGrowArgs> DevrevGrows
        {
            get => _devrevGrows ?? (_devrevGrows = new InputList<Inputs.ProjectConnectorsDevrevGrowArgs>());
            set => _devrevGrows = value;
        }

        [Input("docebos")]
        private InputList<Inputs.ProjectConnectorsDoceboArgs>? _docebos;

        /// <summary>
        /// Get user information from Docebo in your Descope user journeys with the Docebo connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsDoceboArgs> Docebos
        {
            get => _docebos ?? (_docebos = new InputList<Inputs.ProjectConnectorsDoceboArgs>());
            set => _docebos = value;
        }

        [Input("eightByEightVibers")]
        private InputList<Inputs.ProjectConnectorsEightByEightViberArgs>? _eightByEightVibers;

        /// <summary>
        /// Send Viber messages to the user.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsEightByEightViberArgs> EightByEightVibers
        {
            get => _eightByEightVibers ?? (_eightByEightVibers = new InputList<Inputs.ProjectConnectorsEightByEightViberArgs>());
            set => _eightByEightVibers = value;
        }

        [Input("eightByEightWhatsapps")]
        private InputList<Inputs.ProjectConnectorsEightByEightWhatsappArgs>? _eightByEightWhatsapps;

        /// <summary>
        /// Send WhatsApp messages to the user.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsEightByEightWhatsappArgs> EightByEightWhatsapps
        {
            get => _eightByEightWhatsapps ?? (_eightByEightWhatsapps = new InputList<Inputs.ProjectConnectorsEightByEightWhatsappArgs>());
            set => _eightByEightWhatsapps = value;
        }

        [Input("elephants")]
        private InputList<Inputs.ProjectConnectorsElephantArgs>? _elephants;

        /// <summary>
        /// Use this connector to obtain an identity trust score.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsElephantArgs> Elephants
        {
            get => _elephants ?? (_elephants = new InputList<Inputs.ProjectConnectorsElephantArgs>());
            set => _elephants = value;
        }

        [Input("externalTokenHttps")]
        private InputList<Inputs.ProjectConnectorsExternalTokenHttpArgs>? _externalTokenHttps;

        /// <summary>
        /// A generic HTTP token connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsExternalTokenHttpArgs> ExternalTokenHttps
        {
            get => _externalTokenHttps ?? (_externalTokenHttps = new InputList<Inputs.ProjectConnectorsExternalTokenHttpArgs>());
            set => _externalTokenHttps = value;
        }

        [Input("fingerprintDescopes")]
        private InputList<Inputs.ProjectConnectorsFingerprintDescopeArgs>? _fingerprintDescopes;

        /// <summary>
        /// Descope Fingerprint capabilities for fraud detection and risk assessment.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsFingerprintDescopeArgs> FingerprintDescopes
        {
            get => _fingerprintDescopes ?? (_fingerprintDescopes = new InputList<Inputs.ProjectConnectorsFingerprintDescopeArgs>());
            set => _fingerprintDescopes = value;
        }

        [Input("fingerprints")]
        private InputList<Inputs.ProjectConnectorsFingerprintArgs>? _fingerprints;

        /// <summary>
        /// Prevent fraud by adding device intelligence with the Fingerprint connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsFingerprintArgs> Fingerprints
        {
            get => _fingerprints ?? (_fingerprints = new InputList<Inputs.ProjectConnectorsFingerprintArgs>());
            set => _fingerprints = value;
        }

        [Input("firebaseAdmins")]
        private InputList<Inputs.ProjectConnectorsFirebaseAdminArgs>? _firebaseAdmins;

        /// <summary>
        /// Firebase connector enables you to utilize Firebase's APIs to generate a Firebase user token for a given Descope user.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsFirebaseAdminArgs> FirebaseAdmins
        {
            get => _firebaseAdmins ?? (_firebaseAdmins = new InputList<Inputs.ProjectConnectorsFirebaseAdminArgs>());
            set => _firebaseAdmins = value;
        }

        [Input("forters")]
        private InputList<Inputs.ProjectConnectorsForterArgs>? _forters;

        /// <summary>
        /// Leverage ML-based risk scores for fraud prevention with the Forter connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsForterArgs> Forters
        {
            get => _forters ?? (_forters = new InputList<Inputs.ProjectConnectorsForterArgs>());
            set => _forters = value;
        }

        [Input("genericEmailGateways")]
        private InputList<Inputs.ProjectConnectorsGenericEmailGatewayArgs>? _genericEmailGateways;

        /// <summary>
        /// Send emails using a generic Email gateway.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsGenericEmailGatewayArgs> GenericEmailGateways
        {
            get => _genericEmailGateways ?? (_genericEmailGateways = new InputList<Inputs.ProjectConnectorsGenericEmailGatewayArgs>());
            set => _genericEmailGateways = value;
        }

        [Input("genericSmsGateways")]
        private InputList<Inputs.ProjectConnectorsGenericSmsGatewayArgs>? _genericSmsGateways;

        /// <summary>
        /// Send messages using a generic SMS gateway.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsGenericSmsGatewayArgs> GenericSmsGateways
        {
            get => _genericSmsGateways ?? (_genericSmsGateways = new InputList<Inputs.ProjectConnectorsGenericSmsGatewayArgs>());
            set => _genericSmsGateways = value;
        }

        [Input("googleCloudLoggings")]
        private InputList<Inputs.ProjectConnectorsGoogleCloudLoggingArgs>? _googleCloudLoggings;

        /// <summary>
        /// Stream logs and audit events with the Google Cloud Logging connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsGoogleCloudLoggingArgs> GoogleCloudLoggings
        {
            get => _googleCloudLoggings ?? (_googleCloudLoggings = new InputList<Inputs.ProjectConnectorsGoogleCloudLoggingArgs>());
            set => _googleCloudLoggings = value;
        }

        [Input("googleCloudTranslations")]
        private InputList<Inputs.ProjectConnectorsGoogleCloudTranslationArgs>? _googleCloudTranslations;

        /// <summary>
        /// Localize the language of your login and user journey screens with the Google Cloud Translation connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsGoogleCloudTranslationArgs> GoogleCloudTranslations
        {
            get => _googleCloudTranslations ?? (_googleCloudTranslations = new InputList<Inputs.ProjectConnectorsGoogleCloudTranslationArgs>());
            set => _googleCloudTranslations = value;
        }

        [Input("googleMapsPlaces")]
        private InputList<Inputs.ProjectConnectorsGoogleMapsPlaceArgs>? _googleMapsPlaces;

        /// <summary>
        /// Get address autocompletions from Place Autocomplete Data API.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsGoogleMapsPlaceArgs> GoogleMapsPlaces
        {
            get => _googleMapsPlaces ?? (_googleMapsPlaces = new InputList<Inputs.ProjectConnectorsGoogleMapsPlaceArgs>());
            set => _googleMapsPlaces = value;
        }

        [Input("hibps")]
        private InputList<Inputs.ProjectConnectorsHibpArgs>? _hibps;

        /// <summary>
        /// Check if passwords have been previously exposed in data breaches with the Have I Been Pwned connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsHibpArgs> Hibps
        {
            get => _hibps ?? (_hibps = new InputList<Inputs.ProjectConnectorsHibpArgs>());
            set => _hibps = value;
        }

        [Input("https")]
        private InputList<Inputs.ProjectConnectorsHttpArgs>? _https;

        /// <summary>
        /// A general purpose HTTP client
        /// </summary>
        public InputList<Inputs.ProjectConnectorsHttpArgs> Https
        {
            get => _https ?? (_https = new InputList<Inputs.ProjectConnectorsHttpArgs>());
            set => _https = value;
        }

        [Input("hubspots")]
        private InputList<Inputs.ProjectConnectorsHubspotArgs>? _hubspots;

        /// <summary>
        /// Orchestrate customer identity information from your Descope user journey with the HubSpot connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsHubspotArgs> Hubspots
        {
            get => _hubspots ?? (_hubspots = new InputList<Inputs.ProjectConnectorsHubspotArgs>());
            set => _hubspots = value;
        }

        [Input("incodes")]
        private InputList<Inputs.ProjectConnectorsIncodeArgs>? _incodes;

        /// <summary>
        /// Use the Incode connection to run identity verification processes like document checks or facial recognition.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsIncodeArgs> Incodes
        {
            get => _incodes ?? (_incodes = new InputList<Inputs.ProjectConnectorsIncodeArgs>());
            set => _incodes = value;
        }

        [Input("intercoms")]
        private InputList<Inputs.ProjectConnectorsIntercomArgs>? _intercoms;

        /// <summary>
        /// Orchestrate customer identity information from your Descope user journey with the Intercom connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsIntercomArgs> Intercoms
        {
            get => _intercoms ?? (_intercoms = new InputList<Inputs.ProjectConnectorsIntercomArgs>());
            set => _intercoms = value;
        }

        [Input("lokalises")]
        private InputList<Inputs.ProjectConnectorsLokaliseArgs>? _lokalises;

        /// <summary>
        /// Localize the language of your login and user journey screens with the Lokalise connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsLokaliseArgs> Lokalises
        {
            get => _lokalises ?? (_lokalises = new InputList<Inputs.ProjectConnectorsLokaliseArgs>());
            set => _lokalises = value;
        }

        [Input("mparticles")]
        private InputList<Inputs.ProjectConnectorsMparticleArgs>? _mparticles;

        /// <summary>
        /// Track and send user event data (e.g. page views, purchases, etc.) across connected tools using the mParticle connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsMparticleArgs> Mparticles
        {
            get => _mparticles ?? (_mparticles = new InputList<Inputs.ProjectConnectorsMparticleArgs>());
            set => _mparticles = value;
        }

        [Input("newrelics")]
        private InputList<Inputs.ProjectConnectorsNewrelicArgs>? _newrelics;

        /// <summary>
        /// Stream authentication audit logs with the New Relic connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsNewrelicArgs> Newrelics
        {
            get => _newrelics ?? (_newrelics = new InputList<Inputs.ProjectConnectorsNewrelicArgs>());
            set => _newrelics = value;
        }

        [Input("radars")]
        private InputList<Inputs.ProjectConnectorsRadarArgs>? _radars;

        /// <summary>
        /// Get address autocompletions from Radar Autocomplete API.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsRadarArgs> Radars
        {
            get => _radars ?? (_radars = new InputList<Inputs.ProjectConnectorsRadarArgs>());
            set => _radars = value;
        }

        [Input("recaptchaEnterprises")]
        private InputList<Inputs.ProjectConnectorsRecaptchaEnterpriseArgs>? _recaptchaEnterprises;

        /// <summary>
        /// Mitigate fraud using advanced risk analysis and add adaptive MFA with the reCAPTCHA Enterprise connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsRecaptchaEnterpriseArgs> RecaptchaEnterprises
        {
            get => _recaptchaEnterprises ?? (_recaptchaEnterprises = new InputList<Inputs.ProjectConnectorsRecaptchaEnterpriseArgs>());
            set => _recaptchaEnterprises = value;
        }

        [Input("recaptchas")]
        private InputList<Inputs.ProjectConnectorsRecaptchaArgs>? _recaptchas;

        /// <summary>
        /// Prevent bot attacks on your login pages with the reCAPTCHA v3 connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsRecaptchaArgs> Recaptchas
        {
            get => _recaptchas ?? (_recaptchas = new InputList<Inputs.ProjectConnectorsRecaptchaArgs>());
            set => _recaptchas = value;
        }

        [Input("rekognitions")]
        private InputList<Inputs.ProjectConnectorsRekognitionArgs>? _rekognitions;

        /// <summary>
        /// Add image recognition capabilities for identity verification and fraud prevention with the Amazon Rekognition connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsRekognitionArgs> Rekognitions
        {
            get => _rekognitions ?? (_rekognitions = new InputList<Inputs.ProjectConnectorsRekognitionArgs>());
            set => _rekognitions = value;
        }

        [Input("salesforceMarketingClouds")]
        private InputList<Inputs.ProjectConnectorsSalesforceMarketingCloudArgs>? _salesforceMarketingClouds;

        /// <summary>
        /// Send transactional messages with the Salesforce Marketing Cloud connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSalesforceMarketingCloudArgs> SalesforceMarketingClouds
        {
            get => _salesforceMarketingClouds ?? (_salesforceMarketingClouds = new InputList<Inputs.ProjectConnectorsSalesforceMarketingCloudArgs>());
            set => _salesforceMarketingClouds = value;
        }

        [Input("salesforces")]
        private InputList<Inputs.ProjectConnectorsSalesforceArgs>? _salesforces;

        /// <summary>
        /// Run SQL queries to retrieve user roles, profiles, account status, and more with the Salesforce connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSalesforceArgs> Salesforces
        {
            get => _salesforces ?? (_salesforces = new InputList<Inputs.ProjectConnectorsSalesforceArgs>());
            set => _salesforces = value;
        }

        [Input("sardines")]
        private InputList<Inputs.ProjectConnectorsSardineArgs>? _sardines;

        /// <summary>
        /// Evaluate customer risk using Sardine
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSardineArgs> Sardines
        {
            get => _sardines ?? (_sardines = new InputList<Inputs.ProjectConnectorsSardineArgs>());
            set => _sardines = value;
        }

        [Input("segments")]
        private InputList<Inputs.ProjectConnectorsSegmentArgs>? _segments;

        /// <summary>
        /// Orchestrate customer identity traits and signals from your Descope user journey with the Segment connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSegmentArgs> Segments
        {
            get => _segments ?? (_segments = new InputList<Inputs.ProjectConnectorsSegmentArgs>());
            set => _segments = value;
        }

        [Input("sendgrids")]
        private InputList<Inputs.ProjectConnectorsSendgridArgs>? _sendgrids;

        /// <summary>
        /// SendGrid is a cloud-based SMTP provider that allows you to send emails without having to maintain email servers.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSendgridArgs> Sendgrids
        {
            get => _sendgrids ?? (_sendgrids = new InputList<Inputs.ProjectConnectorsSendgridArgs>());
            set => _sendgrids = value;
        }

        [Input("ses")]
        private InputList<Inputs.ProjectConnectorsSeArgs>? _ses;

        /// <summary>
        /// Amazon Simple Email Service (SES) for sending emails through AWS infrastructure.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSeArgs> Ses
        {
            get => _ses ?? (_ses = new InputList<Inputs.ProjectConnectorsSeArgs>());
            set => _ses = value;
        }

        [Input("slacks")]
        private InputList<Inputs.ProjectConnectorsSlackArgs>? _slacks;

        /// <summary>
        /// Send updates to your team on Slack.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSlackArgs> Slacks
        {
            get => _slacks ?? (_slacks = new InputList<Inputs.ProjectConnectorsSlackArgs>());
            set => _slacks = value;
        }

        [Input("smartlings")]
        private InputList<Inputs.ProjectConnectorsSmartlingArgs>? _smartlings;

        /// <summary>
        /// Localize the language of your login and user journey screens with the Smartling connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSmartlingArgs> Smartlings
        {
            get => _smartlings ?? (_smartlings = new InputList<Inputs.ProjectConnectorsSmartlingArgs>());
            set => _smartlings = value;
        }

        [Input("smtps")]
        private InputList<Inputs.ProjectConnectorsSmtpArgs>? _smtps;

        /// <summary>
        /// Simple Mail Transfer Protocol (SMTP) server for sending emails.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSmtpArgs> Smtps
        {
            get => _smtps ?? (_smtps = new InputList<Inputs.ProjectConnectorsSmtpArgs>());
            set => _smtps = value;
        }

        [Input("sns")]
        private InputList<Inputs.ProjectConnectorsSnArgs>? _sns;

        /// <summary>
        /// Amazon Simple Notification Service (SNS) for sending SMS messages through AWS.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSnArgs> Sns
        {
            get => _sns ?? (_sns = new InputList<Inputs.ProjectConnectorsSnArgs>());
            set => _sns = value;
        }

        [Input("sumologics")]
        private InputList<Inputs.ProjectConnectorsSumologicArgs>? _sumologics;

        /// <summary>
        /// Stream logs and audit events with the Sumo Logic connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSumologicArgs> Sumologics
        {
            get => _sumologics ?? (_sumologics = new InputList<Inputs.ProjectConnectorsSumologicArgs>());
            set => _sumologics = value;
        }

        [Input("supabases")]
        private InputList<Inputs.ProjectConnectorsSupabaseArgs>? _supabases;

        /// <summary>
        /// Generate external tokens for user authentication in Supabase projects.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsSupabaseArgs> Supabases
        {
            get => _supabases ?? (_supabases = new InputList<Inputs.ProjectConnectorsSupabaseArgs>());
            set => _supabases = value;
        }

        [Input("telesigns")]
        private InputList<Inputs.ProjectConnectorsTelesignArgs>? _telesigns;

        /// <summary>
        /// Verify phone numbers and leverage granular risk scores for adaptive MFA with the Telesign Intelligence connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsTelesignArgs> Telesigns
        {
            get => _telesigns ?? (_telesigns = new InputList<Inputs.ProjectConnectorsTelesignArgs>());
            set => _telesigns = value;
        }

        [Input("traceables")]
        private InputList<Inputs.ProjectConnectorsTraceableArgs>? _traceables;

        /// <summary>
        /// Identify and respond to fraudulent login activity with the Traceable Digital Fraud Prevention connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsTraceableArgs> Traceables
        {
            get => _traceables ?? (_traceables = new InputList<Inputs.ProjectConnectorsTraceableArgs>());
            set => _traceables = value;
        }

        [Input("turnstiles")]
        private InputList<Inputs.ProjectConnectorsTurnstileArgs>? _turnstiles;

        /// <summary>
        /// Prevent bot attacks on your login pages with the Turnstile connector.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsTurnstileArgs> Turnstiles
        {
            get => _turnstiles ?? (_turnstiles = new InputList<Inputs.ProjectConnectorsTurnstileArgs>());
            set => _turnstiles = value;
        }

        [Input("twilioCores")]
        private InputList<Inputs.ProjectConnectorsTwilioCoreArgs>? _twilioCores;

        /// <summary>
        /// Twilio is a cloud-based communication provider of communication tools for making and receiving phone calls, sending and receiving text messages, and performing other communication functions.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsTwilioCoreArgs> TwilioCores
        {
            get => _twilioCores ?? (_twilioCores = new InputList<Inputs.ProjectConnectorsTwilioCoreArgs>());
            set => _twilioCores = value;
        }

        [Input("twilioVerifies")]
        private InputList<Inputs.ProjectConnectorsTwilioVerifyArgs>? _twilioVerifies;

        /// <summary>
        /// Twilio Verify is an OTP service that can be used via text messages, instant messaging platforms, voice and e-mail. Choose this connector only if you are a Twilio Verify customer.
        /// </summary>
        public InputList<Inputs.ProjectConnectorsTwilioVerifyArgs> TwilioVerifies
        {
            get => _twilioVerifies ?? (_twilioVerifies = new InputList<Inputs.ProjectConnectorsTwilioVerifyArgs>());
            set => _twilioVerifies = value;
        }

        public ProjectConnectorsArgs()
        {
        }
        public static new ProjectConnectorsArgs Empty => new ProjectConnectorsArgs();
    }
}
