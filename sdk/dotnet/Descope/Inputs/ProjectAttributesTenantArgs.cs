// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Inputs
{

    public sealed class ProjectAttributesTenantArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines the required permissions for this tenant.
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.ProjectAttributesTenantAuthorizationArgs>? Authorization { get; set; }

        /// <summary>
        /// An optional identifier for the attribute. This value is called `Machine Name` in the Descope console. If a value is not provided then an appropriate one will be created from the value of `Name`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the attribute. This value is called `Display Name` in the Descope console.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("selectOptions")]
        private InputList<string>? _selectOptions;

        /// <summary>
        /// When the attribute type is "multiselect". A list of options to choose from.
        /// </summary>
        public InputList<string> SelectOptions
        {
            get => _selectOptions ?? (_selectOptions = new InputList<string>());
            set => _selectOptions = value;
        }

        /// <summary>
        /// The type of the attribute. Choose one of "string", "number", "boolean", "singleselect", "multiselect", "date".
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectAttributesTenantArgs()
        {
        }
        public static new ProjectAttributesTenantArgs Empty => new ProjectAttributesTenantArgs();
    }
}
