// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Descope.Pulumi.Descope.Inputs
{

    public sealed class ProjectAuthenticationOauthSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Apple's OAuth provider, allowing users to authenticate with their Apple Account.
        /// </summary>
        [Input("apple")]
        public Input<Inputs.ProjectAuthenticationOauthSystemAppleArgs>? Apple { get; set; }

        /// <summary>
        /// Discord's OAuth provider, allowing users to authenticate with their Discord account.
        /// </summary>
        [Input("discord")]
        public Input<Inputs.ProjectAuthenticationOauthSystemDiscordArgs>? Discord { get; set; }

        /// <summary>
        /// Facebook's OAuth provider, allowing users to authenticate with their Facebook account.
        /// </summary>
        [Input("facebook")]
        public Input<Inputs.ProjectAuthenticationOauthSystemFacebookArgs>? Facebook { get; set; }

        /// <summary>
        /// GitHub's OAuth provider, allowing users to authenticate with their GitHub account.
        /// </summary>
        [Input("github")]
        public Input<Inputs.ProjectAuthenticationOauthSystemGithubArgs>? Github { get; set; }

        /// <summary>
        /// GitLab's OAuth provider, allowing users to authenticate with their GitLab account.
        /// </summary>
        [Input("gitlab")]
        public Input<Inputs.ProjectAuthenticationOauthSystemGitlabArgs>? Gitlab { get; set; }

        /// <summary>
        /// Google's OAuth provider, allowing users to authenticate with their Google account.
        /// </summary>
        [Input("google")]
        public Input<Inputs.ProjectAuthenticationOauthSystemGoogleArgs>? Google { get; set; }

        /// <summary>
        /// LinkedIn's OAuth provider, allowing users to authenticate with their LinkedIn account.
        /// </summary>
        [Input("linkedin")]
        public Input<Inputs.ProjectAuthenticationOauthSystemLinkedinArgs>? Linkedin { get; set; }

        /// <summary>
        /// Microsoft's OAuth provider, allowing users to authenticate with their Microsoft account.
        /// </summary>
        [Input("microsoft")]
        public Input<Inputs.ProjectAuthenticationOauthSystemMicrosoftArgs>? Microsoft { get; set; }

        /// <summary>
        /// Slack's OAuth provider, allowing users to authenticate with their Slack account.
        /// </summary>
        [Input("slack")]
        public Input<Inputs.ProjectAuthenticationOauthSystemSlackArgs>? Slack { get; set; }

        public ProjectAuthenticationOauthSystemArgs()
        {
        }
        public static new ProjectAuthenticationOauthSystemArgs Empty => new ProjectAuthenticationOauthSystemArgs();
    }
}
