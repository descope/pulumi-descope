# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt
name: Publish

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      isPrerelease:
        required: true
        type: boolean
      skipGoSdk:
        default: false
        type: boolean
        description: Skip publishing & verifying the Go SDK

env:
  IS_PRERELEASE: ${{ inputs.isPrerelease }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_REGISTRY }}
  NPM_TOKEN: ${{ secrets.CI_NPM_REGISTRY }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_ORG_KEY }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  PYPI_USERNAME: __token__
  TF_APPEND_USER_AGENT: pulumi

jobs:
  publish:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Validate prerelease
        if: inputs.isPrerelease == false && (contains(inputs.version, '-') || contains(inputs.version, '+'))
        run: echo "Can't publish a prerelease version as a stable release. This is likely a bug in the calling workflow." && exit 1
      - name: Validate skipGoSdk
        if: inputs.skipGoSdk && inputs.isPrerelease == false
        run: echo "Can't skip Go SDK for stable releases. This is likely a bug in the calling workflow." && exit 1
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumictl, pulumicli, go, schema-tools
      - name: Create dist directory
        run: mkdir -p dist
      - name: Download provider assets
        uses: actions/download-artifact@v4
        with:
          pattern: pulumi-resource-descope-v${{ inputs.version }}-*
          path: dist
          # Don't create a directory for each artifact
          merge-multiple: true
      - name: Calculate checksums
        working-directory: dist
        run: shasum ./*.tar.gz > pulumi-descope_${{ inputs.version }}_checksums.txt
      - name: Get Schema Change Summary
        id: schema-summary
        shell: bash
        run: |
          # Get latest stable release. Return only first column from result (tag).
          LAST_VERSION=$(gh release view --repo descope/pulumi-descope --json tagName -q .tagName || echo "No stable release" )
          {
            echo 'summary<<EOF'
            if [[ "$LAST_VERSION" != "No stable release" ]]; then
              schema-tools compare --provider="descope" --old-commit="$LAST_VERSION" --new-commit="--local-path=provider/cmd/pulumi-resource-descope/schema.json"
            fi
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@v2
        with:
          private_key: ${{ secrets.RELEASE_APP_PEM }}
          app_id: ${{ secrets.RELEASE_APP_ID }}

      - name: Create GH Release
        uses: softprops/action-gh-release@v2
        if: inputs.isPrerelease == false
        with:
          tag_name: v${{ inputs.version }}
          prerelease: ${{ inputs.isPrerelease }}
          # We keep pre-releases as drafts so they're not visible until we manually publish them.
          draft: ${{ inputs.isPrerelease }}
          body: ${{ steps.schema-summary.outputs.summary }}
          generate_release_notes: true
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}

  publish_sdk:
    name: publish_sdk
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumictl, pulumicli, go, node, dotnet, python
      - name: Publish SDKs
        uses: pulumi/pulumi-package-publisher@v0.0.20
        with:
          sdk: all,!java
          version: ${{ inputs.version }}
      - name: Download Go SDK
        uses: ./.github/actions/download-sdk
        with:
          language: go
      - uses: pulumi/publish-go-sdk-action@v1
        if: inputs.skipGoSdk == false
        with:
          repository: ${{ github.repository }}
          base-ref: ${{ github.sha }}
          source: sdk
          path: sdk
          version: ${{ inputs.version }}
          additive: false
          # Avoid including other language SDKs & artifacts in the commit
          files: |
            go.*
            go/**
            !*.tar.gz
